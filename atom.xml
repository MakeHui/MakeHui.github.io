<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[MakeHui's 超平和バスターズはずっとなかよし]]></title>
  <subtitle><![CDATA[あの日見た花の名前を僕達はまだ知らない。]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://huyaohui.com/"/>
  <updated>2016-01-09T10:06:35.000Z</updated>
  <id>http://huyaohui.com/</id>
  
  <author>
    <name><![CDATA[MakeHui]]></name>
    <email><![CDATA[hulifu521003@gmail.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[CentOS6.5安装GitLab7.10.4]]></title>
    <link href="http://huyaohui.com/2016/01/09/CentOS6.5%E5%AE%89%E8%A3%85GitLab7.10.4/"/>
    <id>http://huyaohui.com/2016/01/09/CentOS6.5安装GitLab7.10.4/</id>
    <published>2016-01-09T09:00:41.000Z</published>
    <updated>2016-01-09T10:06:35.000Z</updated>
    <content type="html"><![CDATA[<p>GitLab，是一个利用 Ruby on Rails 开发的开源应用程序，实现一个自托管的Git项目仓库，可通过Web界面进行访问公开的或者私人项目。<br>它拥有与GitHub类似的功能，能够浏览源代码，管理缺陷和注释。可以管理团队对仓库的访问，它非常易于浏览提交过的版本并提供一个文件历史库。团队成员可以利用内置的简单聊天程序（Wall）进行交流。它还提供一个代码片段收集功能可以轻松实现代码复用，便于日后有需要的时候进行查找。<br>GitLab 要求服务器端采用 Gitolite 搭建(为了方便安装，现已经用gitlab-shell代替Gitolite[1])。<a href="https://zh.wikipedia.org/wiki/Gitlab" target="_blank" rel="external">-&gt;wikipedia.org</a></p>
<a id="more"></a>
<h2 id="GitLab的安装方式">GitLab的安装方式</h2><p>GitLab的两种安装方法</p>
<h3 id="编译安装">编译安装</h3><ol>
<li>优点：可定制性强。数据库既可以选择MySQL,也可以选择PostgreSQL;服务器既可以选择Apache，也可以选择Nginx。</li>
<li>缺点：国外的源不稳定，被墙时，依赖软件包难以下载。配置流程繁琐、复杂，容易出现各种各样的问题。依赖关系多，不容易管理，卸载GitLab相对麻烦。</li>
</ol>
<h3 id="通过rpm包安装">通过rpm包安装</h3><ol>
<li>优点：安装过程简单，安装速度快。采用rpm包安装方式，安装的软件包便于管理。</li>
<li>缺点：数据库默认采用PostgreSQL，服务器默认采用Nginx，不容易定制。</li>
</ol>
<h2 id="安装GitLab_CE_Omnibus包">安装GitLab CE Omnibus包</h2><h3 id="查看系统版本">查看系统版本</h3><p>在linux终端下，使用cat /etc/issue命令查询当前系统的发行版本，查询到阿里云所安装的linux版本为CentOS release 6.6 (Final)。</p>
<h3 id="下载系统对应的安装包">下载系统对应的安装包</h3><p><a href="https://about.gitlab.com/downloads/archives/" target="_blank" rel="external">https://about.gitlab.com/downloads/archives/</a><br>进入gitlab官方网站,选择对应的操作系统——CentOS 6 (and RedHat/Oracle/Scientific Linux 6)</p>
<h3 id="按照官方的提示进行安装">按照官方的提示进行安装</h3><h4 id="安装配置必要的依赖">安装配置必要的依赖</h4><p>在Centos 6 和 7 中，以下的命令将会打开HTTP和SSH在系统防火墙中的可访问权限。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install openssh-server</span><br><span class="line">sudo yum install postfix</span><br><span class="line">sudo yum install cronie</span><br><span class="line">sudo service postfix start</span><br><span class="line">sudo chkconfig postfix on</span><br><span class="line">sudo lokkit <span class="operator">-s</span> http <span class="operator">-s</span> ssh</span><br></pre></td></tr></table></figure>
<h4 id="下载Omnibus_package包并安装">下载Omnibus package包并安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://downloads-packages.s3.amazonaws.com/centos-<span class="number">6.6</span>/gitlab-ce-<span class="number">7.10</span>.<span class="number">4</span>~omnibus-<span class="number">1</span>.x86_64.rpm</span><br><span class="line">sudo rpm -i gitlab-ce-<span class="number">7.10</span>.<span class="number">4</span>~omnibus-<span class="number">1</span>.x86_64.rpm</span><br></pre></td></tr></table></figure>
<p><code>Note:由于amazonaws的服务器被墙，下载这个包时可能需要翻墙下载。</code></p>
<h4 id="配置并启动GitLab">配置并启动GitLab</h4><ol>
<li>打开<code>/etc/gitlab/gitlab.rb</code></li>
<li>将<code>external_url = &#39;http://git.example.com&#39;</code>修改为自己的IP地址：<code>http://xxx.xx.xxx.xx</code></li>
<li>然后执行下面的命令，对GitLab进行编译。<code>sudo gitlab-ctl reconfigure</code></li>
</ol>
<h4 id="登录GitLab">登录GitLab</h4><p>Username: root<br>Password: 5iveL!fe</p>
<h2 id="安装过程中出现的问题">安装过程中出现的问题</h2><h3 id="在浏览器中访问GitLab出现502错误">在浏览器中访问GitLab出现502错误</h3><p>原因：内存不足。</p>
<p>解决办法：检查系统的虚拟内存是否随机启动了，如果系统无虚拟内存，则增加虚拟内存，再重新启动系统。</p>
<h3 id="80端口冲突">80端口冲突</h3><p>原因：Nginx默认使用了80端口。</p>
<p>解决办法：</p>
<ol>
<li>为了使Nginx与Apache能够共存，并且为了简化GitLab的URL地址，Nginx端口保持不变，修改Apache的端口为<code>4040</code>。</li>
<li>这样就可以直接用使用ip访问Gitlab。</li>
<li>而禅道则可以使用<code>4040</code>端口进行访问，像这样：<code>xxx.xx.xxx.xx:4040/zentao</code>。</li>
<li>具体修改的地方在<code>/etc/httpd/conf/httpd.conf</code>这个文件中</li>
<li>找到<code>Listen 80</code>这一句并将之注释掉</li>
<li>在底下添加一句<code>Listen 4040</code></li>
<li>保存后执行<code>service httpd restart</code>重启apache服务即可。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Listen 80 </span></span><br><span class="line">Listen <span class="number">4040</span></span><br></pre></td></tr></table></figure>
<h3 id="8080端口冲突">8080端口冲突</h3><p>原因：由于unicorn默认使用的是8080端口。</p>
<p>解决办法：</p>
<ol>
<li>打开<code>/etc/gitlab/gitlab.rb</code></li>
<li>去掉<code># unicorn[&#39;port&#39;] = 8080</code>的注释，将<code>8080</code>修改为<code>9090</code></li>
<li>保存后运行<code>sudo gitlab-ctl reconfigure</code>即可。</li>
</ol>
<h3 id="STMP设置">STMP设置</h3><p>配置无效，暂时不知道原因。</p>
<h3 id="GitLab头像无法正常显示">GitLab头像无法正常显示</h3><p>原因：gravatar被墙<br>解决办法：<br>编辑 /etc/gitlab/gitlab.rb，将<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gitlab_rails['gravatar_plain_url'] = 'http://gravatar.duoshuo.com/avatar/%&#123;hash&#125;?s=%&#123;size&#125;&amp;d=identicon'</span></span><br><span class="line"><span class="comment">## 修改为：</span></span><br><span class="line">gitlab_rails[<span class="string">'gravatar_plain_url'</span>] = <span class="string">'http://gravatar.duoshuo.com/avatar/%&#123;hash&#125;?s=%&#123;size&#125;&amp;d=identicon'</span></span><br></pre></td></tr></table></figure></p>
<p>然后在命令行执行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl reconfigure </span><br><span class="line">sudo gitlab-rake cache:clear RAILS_ENV=production</span><br></pre></td></tr></table></figure></p>
<h2 id="补充">补充</h2><h3 id="使用过程中_500">使用过程中 500</h3><h4 id="起初以为是GitLab本身的问题">起初以为是GitLab本身的问题</h4><p>期间试了N中方法, 并没有成功, 这里记录下来一种比较靠谱的说法</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rake gitlab:check</span><br><span class="line"></span><br><span class="line">gitlab-rake db:migrate</span><br><span class="line"></span><br><span class="line">gitlab-ctl reconfigure</span><br><span class="line">gitlab-ctl restart</span><br></pre></td></tr></table></figure>
<h4 id="我遇到的实际的原因">我遇到的实际的原因</h4><p>就只是应为我服务器的内存过小<br>真的就只是这个问题而已, 整了好久 %&gt;_&lt;%</p>
<p><code>Ps: 推荐内存2GB以上</code></p>
<h3 id="关于第三方有email的问题">关于第三方有email的问题</h3><p>尝试了N久, 并没能成功</p>
<p><a href="http://905010.com/archives/472" target="_blank" rel="external">http://905010.com/archives/472</a><br><a href="http://my.oschina.net/u/1158620/blog/289191?fromerr=hW0nWMlX" target="_blank" rel="external">http://my.oschina.net/u/1158620/blog/289191?fromerr=hW0nWMlX</a><br><a href="http://iceeggplant.blog.51cto.com/1446843/1611147" target="_blank" rel="external">http://iceeggplant.blog.51cto.com/1446843/1611147</a></p>
<h3 id="系统发件问题">系统发件问题</h3><h4 id="尽量不要用IP地址访问">尽量不要用IP地址访问</h4><p>原因: IP地址访问会导致发件人的姓名变成<code>gitlab@xx.xx.xx.xx</code>, 而各大邮箱运营商都是屏蔽IP地址邮箱名的, 应为这个问题搞的我重装了此系统, 悲剧</p>
<p>解决方法: </p>
<ol>
<li><p>使用域名访问</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/gitlab/gitlab.rb</span><br><span class="line"><span class="comment"># 将</span></span><br><span class="line">external_url = <span class="string">'http://xxx.xx.xxx.xx'</span></span><br><span class="line"><span class="comment"># 修改为你的域名, 需要解析</span></span><br><span class="line">external_url = <span class="string">'http://git.example.com'</span></span><br><span class="line"><span class="comment"># 然后执行下面的命令，对GitLab进行编译。</span></span><br><span class="line">sudo gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果你非要用ip地址访问</p>
</li>
</ol>
<p>一定要把ip地址加到有收件人邮箱的白名单中<br><code>Ps: 是IP地址不是发件人, 是IP地址不是发件人, 是IP地址不是发件人, 这点非常重要</code></p>
<h2 id="参考资料">参考资料</h2><p><a href="https://segmentfault.com/a/1190000002722631" target="_blank" rel="external">原文: GitLab 安装配置笔记</a>    (Ps: 对文章有删减, 如有侵权, 请及时联系本人)<br><a href="https://about.gitlab.com/" target="_blank" rel="external">https://about.gitlab.com/</a><br><a href="http://leo108.com/pid-2150.asp" target="_blank" rel="external">http://leo108.com/pid-2150.asp</a><br><a href="https://gitlab.com/gitlab-org/gitlab-ce/issues/2052" target="_blank" rel="external">https://gitlab.com/gitlab-org/gitlab-ce/issues/2052</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>GitLab，是一个利用 Ruby on Rails 开发的开源应用程序，实现一个自托管的Git项目仓库，可通过Web界面进行访问公开的或者私人项目。<br>它拥有与GitHub类似的功能，能够浏览源代码，管理缺陷和注释。可以管理团队对仓库的访问，它非常易于浏览提交过的版本并提供一个文件历史库。团队成员可以利用内置的简单聊天程序（Wall）进行交流。它还提供一个代码片段收集功能可以轻松实现代码复用，便于日后有需要的时候进行查找。<br>GitLab 要求服务器端采用 Gitolite 搭建(为了方便安装，现已经用gitlab-shell代替Gitolite[1])。<a href="https://zh.wikipedia.org/wiki/Gitlab">-&gt;wikipedia.org</a></p>]]>
    
    </summary>
    
      <category term="CentOS" scheme="http://huyaohui.com/tags/CentOS/"/>
    
      <category term="GitLab" scheme="http://huyaohui.com/tags/GitLab/"/>
    
      <category term="GitLab" scheme="http://huyaohui.com/categories/GitLab/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用 Linux 文件恢复工具]]></title>
    <link href="http://huyaohui.com/2016/01/03/%E4%BD%BF%E7%94%A8-Linux-%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D%E5%B7%A5%E5%85%B7/"/>
    <id>http://huyaohui.com/2016/01/03/使用-Linux-文件恢复工具/</id>
    <published>2016-01-03T05:22:07.000Z</published>
    <updated>2016-01-03T06:15:34.000Z</updated>
    <content type="html"><![CDATA[<p>本来从未想过要查找linux数据恢复相关的文章资料, 怎料自己手贱把自己的Blog给<code>rm -rf</code>了呢? 简直神作了, 虽然并没有把数据恢复回来, 但是经过测试下面的方法是可行的, 就顺手给记录下来, 用于惊醒自己这天所犯下的sb事. </p>
<a id="more"></a>
<h1 id="事件重现">事件重现</h1><p>起因: 本来想备份一下Blog的源代码</p>
<p>步骤: </p>
<ol>
<li><p>执行命令行执行压缩命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip MakeHui.github.io.zip MakeHui.github.io</span><br></pre></td></tr></table></figure>
</li>
<li><p>少输入了<code>-r</code>, 只备份了个文件夹 o(╯□╰)o</p>
</li>
<li><p>于是删除压缩包. (想必大家都知道发生什么事了 %&gt;_&lt;%)</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf Make[tab]    # &#25105;&#36825;&#37324;&#30452;&#25509;&#25353;tab&#34917;&#20840;&#30340;, &#28982;&#21518;&#24456;&#33258;&#28982;&#30340;&#23601;&#25353;&#20102;enter&#20581;, &#32467;&#26524;...</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>引以为戒, 引以为戒啊…</p>
<h1 id="下面转载文章">下面转载文章</h1><h2 id="使用_Linux_文件恢复工具">使用 Linux 文件恢复工具</h2><p>Linux 系统管理员守则中有这么一条：“慎用 rm -rf 命令，除非你知道此命令所带来的后果“，不过 Linux 下删除文件并不是真实的删除磁盘分区中的文件，而是将文件的 inode 节点中的扇区指针清除，同时释放这些数据对应的数据块，当释放的数据块被系统重新分配时，那些被删除的数据就会被覆盖，所以误删除数据后，应马上卸载文件所在的分区。然后使用相关工具进行恢复。本文以 Ubuntu 12.04 平台为例介介绍四个（foremost、extundelete、testdisk 和 phtorec）常用的 Linux 删除文件恢复工具的使用方法。</p>
<h2 id="Linux_文件恢复的原理">Linux 文件恢复的原理</h2><h3 id="inode_和_block">inode 和 block</h3><p>首先简单介绍一下 Linux 文件系统的最基本单元：inode。inode 译成中文就是索引节点，每个存储设备（例如硬盘）或存储设备的分区被格式化为文件系统后，应该有两部份，一部份是 inode，另一部份是 block，block 是用来存储数据用的。而 inode 呢，就是用来存储这些数据的信息，这些信息包括文件大小、属主、归属的用户组、读写权限等。inode 为每个文件进行信息索引，所以就有了 inode 的数值。linux 操作系统下可以使用 ls –id 命令来查看文件或者目录的 inode 值，一般”root”目录的 inode 值为 2,一个分区挂载到一个目录下时，这个”root”目录的 inode 值为 2<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sdb2 /tmp</span><br><span class="line">ls -id /tmp</span><br><span class="line"><span class="number">2</span> /tmp</span><br></pre></td></tr></table></figure></p>
<h3 id="文件恢复的原理">文件恢复的原理</h3><p>本文要介绍的命令是通过文件系统的 inode 值（一般是 2 ）来获取文件系统信息。在 ext3 和 ext4 文件系统中，每个文件都是通过 inode 来描述其数据存放的具体位置，当文件被删除以后，inode 的数据指针部分被清零，文件目录区没有太多变化。文件的读写都是通过 inode 来实现，当 inode 数据指针被清零以后，即便文件内容还在，也没有办法把文件内容组合出来。当 ext3 和 ext4 文件系统中的元数据 metadata 发生变化时，相应的元数据 metadata 在日志文件会有一份拷贝。比如一个文件被删除了，它的 inode 信息会在日志文件中先保存一份，然后把要删除文件 inode 相关信息清零。这个日志文件是循环使用的，当操作过多时，删除的文件的 inode 日志记录会被新的数据替换，这就彻底丧失了根据 inode 找回数据的机会了。如果是大量文件的删除，这个日志文件会被反复循环利用多次，只留给最后删除的那些文件的恢复机会。</p>
<h2 id="使用命令行工具恢复文件">使用命令行工具恢复文件</h2><h3 id="foremost_和_extundelete_简介">foremost 和 extundelete 简介</h3><p>formost 是一个基于文件头和尾部信息以及文件的内建数据结构恢复文件的命令行工具。这个过程通常叫做数据挖掘（data carvubg）。formost 可以分析由 dd、Safeback、Encase 等生成的镜像文件，也可以直接分析驱动器。文件头和尾可以通过配置文件设置，也可以通过命令行开关使用 formost 内建的文件类型。formost 最初是由美国空军特别调查室（Air Force Office of Special Investigations）和信息系统安全研究中心（The Center for Information Systems Security Studies and Research）开发的，现在使用 GPL 许可。Foremost 支持恢复如下格式：avi, bmp, dll, doc, exe, gif, htm, jar, jpg, mbd, mov, mpg, pdf, png, ppt, rar, rif, sdw, sx, sxc, sxi, sxw, vis, wav, wmv, xls, zip。<br>针对 Linux 下的 ext 文件系统来说，常用的 Linux 文件删除恢复工具有 debugfs、ext3grep、extundelete 等。extundelete 是一个开源的数据恢复工具，支持 ext3、ext4 文件系统，其官方站点位于<a href="http://extundelete.sourceforce.net/，目前最新稳定版本为" target="_blank" rel="external">http://extundelete.sourceforce.net/，目前最新稳定版本为</a> 0.2.0。<br>上面介绍的两种命令行工具 foremost 和 extundelete 二者相比，foremost 支持的文件系统比较多（包括 ext2、 ext3 、vfat、NTFS、ufs、jfs 等）和 extundelete 支持的文件系统较少（ext3、ext4）文件系统。不过 foremost 只能支持恢复特定格式的文件。</p>
<h3 id="使用_foremost">使用 foremost</h3><p>首先安装软件包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install foremost</span><br></pre></td></tr></table></figure></p>
<p>其它 Linux 发行版用户可以在 <a href="http://foremost.sourceforge.net/" target="_blank" rel="external">http://foremost.sourceforge.net/</a> 下载源代码编译安装。下面看看使用方法。</p>
<h4 id="恢复单个类型文件">恢复单个类型文件</h4><p>笔者删除一个 USB（/dev/sdba1）存储器中一个 png 文件然后使用 formost 恢复。<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -f /dev/sdb1/photo1.png&#10;foremost -t png -i /dev/sdb1</span><br></pre></td></tr></table></figure></p>
<p>恢复完成后会在当前目录建立一个 output 目录，在 output 目录下会建立 png 子目录下会包括所有可以恢复的 png 格式的文件。<br>需要说明的是 png 子目录下会包括的 png 格式的文件名称已经改变，另外 output 目录下的 audit.txt 文件是恢复文件列表。</p>
<h4 id="恢复多个类型文件">恢复多个类型文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foremost -v -T -t doc,pdf,jpg,gif -i /dev/sda6 -o /media/disk/Recover</span><br></pre></td></tr></table></figure>
<p>恢复完成后会在当前目录建立一个 output 目录，在 output 目录下会建立四个子目录（/doc,/pdf,/jpg,/gif），分别包括四种类型文件。另外 output 目录下的 audit.txt 文件是恢复文件列表。</p>
<h3 id="使用_extundelete">使用 extundelete</h3><p>首先安装软件包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install extundelete</span><br></pre></td></tr></table></figure></p>
<p>其它 Linux 发行版用户可以在<a href="http://extundelete.sourceforce.net/下载源代码编译安装。下载安装" target="_blank" rel="external">http://extundelete.sourceforce.net/下载源代码编译安装。下载安装</a> extundelete 之前要安装两个软件包 e2fsprogs 和 e2fslibs。下面看看使用方法</p>
<h4 id="模拟数据误删除环境">模拟数据误删除环境</h4><p>这里我们使用一个分区/dev/sdd1 挂在在/backupdate 上，建立一个测试目录/delete 并建立一文件：del1.txt 。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir –p /backupdate/deldate</span></span><br><span class="line"><span class="comment"># mkfs.ext4 /dev/sdd1</span></span><br><span class="line"><span class="comment"># mount /dev/sdd1 /backupdate</span></span><br><span class="line"><span class="comment">#cd /backupdate/deldate</span></span><br><span class="line"><span class="comment"># touch del1.txt</span></span><br><span class="line"><span class="comment"># echo " test 1" &gt; del1.txt</span></span><br><span class="line">获取文件校验码</span><br><span class="line"><span class="comment"># md5sum del1.txt| | |    </span></span><br><span class="line"> <span class="number">66</span>fb6627dbaa37721048e4549db3224d  del1.txt</span><br><span class="line"></span><br><span class="line">删除文件</span><br><span class="line"><span class="comment"># rm -fr /backupdate/*   </span></span><br><span class="line"></span><br><span class="line">卸载文件系统或者挂载为只读</span><br><span class="line"><span class="comment"># umount /backupdate</span></span><br><span class="line">查询恢复数据信息，注意这里的--inode <span class="number">2</span> 这里会扫描分区 ：</span><br><span class="line"><span class="comment"># extundelete /dev/sdd1 --inode 2</span></span><br><span class="line">.....</span><br><span class="line">File name| | | |        | Inode number | Deleted status</span><br><span class="line">Directory block <span class="number">8657</span>:</span><br><span class="line">.| | | | | |  <span class="number">2</span></span><br><span class="line">..| | | | | | <span class="number">2</span></span><br><span class="line">lost+found| | | | | <span class="number">11</span>|      Deleted</span><br><span class="line">del1.txt| | | | |       <span class="number">12</span>|      Deleted</span><br></pre></td></tr></table></figure></p>
<p>上面标记为 Deleted 是已经删除的文件或目录<br>开始恢复文件<br>默认恢复到当前目录下的 RECOVERED_FILES 目录中去。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># extundelete /dev/sdd1 --restore-file del1.txt</span></span><br><span class="line">如果恢复一个目录</span><br><span class="line"><span class="comment"># extundelete /dev/sdd1 --restore-directory /backupdate/deldate</span></span><br><span class="line">恢复所有文件</span><br><span class="line"><span class="comment"># extundelete /dev/sdd1 --restore-all</span></span><br><span class="line">获取恢复文件校验码，对比检测是否恢复成功</span><br><span class="line"><span class="comment"># md5sum RECOVERED_FILES/ del1.txt| | |  </span></span><br><span class="line"><span class="number">66</span>fb6627dbaa37721048e4549db3224d  RECOVERED_FILES/del1.txt</span><br></pre></td></tr></table></figure></p>
<p>查看校验码与之前的是否完全一致。<br>应用总结：笔者在现实使用过程中发现 extundelete 还是有很大的不完整性,基于整个磁盘的恢复功能较为强大,基于目录和文件的恢复还不够强大。在 Linux 下误删除了文件，当发现数据丢失以后，不要进行任何操作，保留现场。要想办法把数据丢失的文件系统经过 dd 命令或者 AIR(Automated Image Restore，<a href="http://cdnetworks-kr-2.dl.sourceforge.net/" target="_blank" rel="external">http://cdnetworks-kr-2.dl.sourceforge.net/</a> )工具到另外的存储空间上作为最原始的备份，以便数据恢复专家现场诊断恢复。<br>使用 scalpel<br>以上介绍的工具主要使用在 ext3 和 ext4 的文件系统，如果用户使用的那些没有日志机制的旧有文件系统，可以使用 scalpel 工具。scalpel 是一种快速文件恢复工具，它通过读取文件系统的数据库来恢复文件。它是独立于文件系统的。<br>用户可以在<a href="http://www.digitalforensicssolutions.com/Scalpel/" target="_blank" rel="external">http://www.digitalforensicssolutions.com/Scalpel/</a> 下载源代码编译安装。下面看看使用方法：<br>使用 scalpel 工具之前，首先要修改配置文件： /etc/scalpel/scalpel.conf。<br>例如用户要恢复所有删除 pdf 文件，那么要在/etc/scalpel/scalpel.conf 把包括 pdf 文件格式的两行之前的# 去掉。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[...]</span><br><span class="line">| pdf     y       <span class="number">5000000</span> %PDF  %EOF\x0d  REVERSE</span><br><span class="line">| pdf     y       <span class="number">5000000</span> %PDF  %EOF\x0a  REVERSE</span><br><span class="line">[...]</span><br></pre></td></tr></table></figure></p>
<p>然后保存文件。<br>下面看看使用方法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scalpel /dev/sdb1 -o /RECOVERY/</span></span><br></pre></td></tr></table></figure></p>
<p>其中/dev/sdb1 是目标驱动器，/RECOVERY/ 是恢复文件存储目录。目录下的 audit.txt 文件是恢复文件列表。</p>
<h2 id="使用字符终端工具_testdisk_和_phtorec">使用字符终端工具 testdisk 和 phtorec</h2><h3 id="testdisk_简介">testdisk 简介</h3><p>testdisk 是分区表恢复、raid 恢复、分区恢复的开源免费工具（testdisk 支持如下文件系统: FAT12/FAT16/FAT32/NTFS/ext2/ext3/ext4）。testdisk 支持的功能: 修复分区表, 恢复已删除分区，用 FAT32 备份表恢复启动扇区，重建 FAT12/FAT16/FAT32 启动扇区，修复 FAT 表，重建 NTFS 启动扇区，用备份表恢复 NTFS 启动扇区，用 mft 镜像表(mft mirror)修复 mft 表，查找 ext2/ext3 备份的 superblock，从 FAT,NTFS 及 ext2 文件系统恢复删除文件，从已删除的 FAT,NTFS 及 ext2/ext3 分区复制文件。</p>
<h3 id="使用方法">使用方法</h3><h4 id="首先安装">首先安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scalpel /dev/sdb1 -o /RECOVERY/</span></span><br></pre></td></tr></table></figure>
<p>其它 Linux 发行版用户可以在<a href="http://www.cgsecurity.org/wiki/TestDisk_Download" target="_blank" rel="external">http://www.cgsecurity.org/wiki/TestDisk_Download</a> 下载源代码编译安装。下载安装 testdisk 之前要安装几个软件包 libjpeg8 ，libncursesw5， libuuid1， zlib1g 。下面看看使用方法</p>
<h4 id="启动_testdisk">启动 testdisk</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#testdisk</span></span><br></pre></td></tr></table></figure>
<p>testdisk 启动后的工作界面首先是选择恢复操作中的 log 文件（testdisk.log）的纪录方式见图 1。</p>
<h5 id="图_1-选择恢复操作中的_log_文件的纪录方式">图 1.选择恢复操作中的 log 文件的纪录方式</h5><p><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB21c9JjXXXXXbnXpXXXXXXXXXX_!!1134915854.jpg" alt="图 1 选择恢复操作中的 log 文件的纪录方式"><br>［Create］新建<br>［Append］追加<br>［No Log］不纪录<br>选择了 log 文件的记录方式后、系统显示处于连接状态的磁盘设备见图 2。</p>
<h5 id="图_2-处于连接状态的磁盘设备">图 2.处于连接状态的磁盘设备</h5><p><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2VSe0jXXXXXctXXXXXXXXXXXX_!!1134915854.jpg" alt="图 2 处于连接状态的磁盘设备"><br>在列出的磁盘设备中，选择要恢复的分区，然后选择磁盘分区的种类。若是 ext4 文件系统的话,请选择 [None ] Non partitioned media 见图 3</p>
<h5 id="图_3-选择_[None_]_Non_partitioned_media">图 3.选择 [None ] Non partitioned media</h5><p><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2T4KLjXXXXXaLXpXXXXXXXXXX_!!1134915854.jpg" alt=""><br>说明：一般选择[Intel] Intel/PC partition（如果是 GPT 分区，请选择 EFI GPT），对于 ext4 文件系统选择 [Intel] Intel/PC partition 也能正确识别,只是分析硬盘時比较慢。<br>下面的画面中选择［Analyse］，对分区进行分析见图 4。</p>
<h5 id="图_4-对分区进行分析">图 4.对分区进行分析</h5><p><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB26LSGjXXXXXb2XpXXXXXXXXXX_!!1134915854.jpg" alt="图 4 对分区进行分析"><br>下面显示了当前分区的状态。这是软件分析的当前分区表的分区结果，我们选择“Deep Search”进行一次深入检测见图 5。</p>
<h5 id="图_5-选择“Deep_Search”进行一次深入检测">图 5.选择“Deep Search”进行一次深入检测</h5><p><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2X4SNjXXXXXaAXpXXXXXXXXXX_!!1134915854.jpg" alt="图 5 选择“Deep Search”进行一次深入检测"><br>下面是检测完成界面见图 6</p>
<h5 id="图_6-检测完成界面">图 6.检测完成界面</h5><p><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB29fmQjXXXXXXRXpXXXXXXXXXX_!!1134915854.jpg" alt="图 6 检测完成界面"><br>在这个画面时,按 P 键就可以列出硬盘上的文件见图 7</p>
<h5 id="图_7-红色的文件名称就是已经被删除的文件">图 7.红色的文件名称就是已经被删除的文件</h5><p><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2XWLXjXXXXXavXXXXXXXXXXXX_!!1134915854.jpg" alt="图 7 红色的文件名称就是已经被删除的文件"><br>红色的文件名称就是已经被删除的文件,选择好你要恢复的文件后,按 c 键之后,它就会问你要复制到哪个目录,这时请选择你要 复制的目地地(destination)即可。</p>
<h3 id="photorec_简介">photorec 简介</h3><p>photorec 是一款用于恢复硬盘、光盘中丢失的视频、文档、压缩包等文件，或从数码相机存储卡中恢复丢失图片的数据恢复软件（因此，该软件命名为 photo recovery 这个名字)。 photorec 忽略文件系统，能直接从介质底层恢复数据，因此，在介质的文件系统严重破坏或被重新格式化后，它也能进行数据恢复。出于安全考虑, photorec 以只读方式来访问您要恢复数据所在的磁盘或存储卡介质。提示: 一旦发现丢失或意外删除了某个图片、文件， 请不要继续往该存储设备或磁盘保存新文件；否则您可能会覆盖原来的数据。 这意味着您在使用 photorec 时，您千万不要将恢复的文件写入到原数据所存储的同一分区。</p>
<h3 id="使用_photorec_恢复文件">使用 photorec 恢复文件</h3><p>photorec 是 testdisk 的伴侣程序，安装 testdisk 后 photorec 就可以使用了。</p>
<h4 id="启动_photorec">启动 photorec</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># photorec</span></span><br></pre></td></tr></table></figure>
<p>图 8 中显示了已连接磁盘设备，准备恢复的文件在那个设备上就选择它，然后在选择 Proceed 按钮继续下一步。</p>
<h5 id="图_8-已连接磁盘设备">图 8.已连接磁盘设备</h5><p><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB27kaQjXXXXXabXpXXXXXXXXXX_!!1134915854.jpg" alt="图 8 已连接磁盘设备"><br>接下来，选择恢复的磁盘分区格式。这里选择 ext4 见图 9。</p>
<h5 id="图_9-选择恢复的磁盘分区格式">图 9.选择恢复的磁盘分区格式</h5><p><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2vva.jXXXXXaSXXXXXXXXXXXX_!!1134915854.jpg" alt="图 9 选择恢复的磁盘分区格式"><br>画面下方［File Opt］中有可供恢复的文件种类提供被选择见图 10。</p>
<h5 id="图_10-可供恢复的文件种类">图 10.可供恢复的文件种类</h5><p><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2wUiIjXXXXXbrXpXXXXXXXXXX_!!1134915854.jpg" alt="图 10 可供恢复的文件种类"><br>说明：如果只是 root 据某些文件签名要恢复部分文件类型，那么可以按 s 取消全部勾选，然后移动光标到要恢复的文件类型，可按空格来选择高亮选中的类型。<br>下面设定要分析的磁盘空间区域，可整个分区搜索，也可只搜索自由空间（相当于未分配簇）见图 11 。</p>
<h5 id="图_11-设定要分析的磁盘空间区域">图 11.设定要分析的磁盘空间区域</h5><p><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB20R2cjXXXXXXBXXXXXXXXXXXX_!!1134915854.jpg" alt="图 11 设定要分析的磁盘空间区域"><br>下面选择分区所使用的文件系统类型，然后设定导出的文件目录，一般输入 Y 并回车即可。图 12 是恢复完成界面。</p>
<h5 id="图_12-恢复完成">图 12.恢复完成</h5><p><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2bb18jXXXXXbiXXXXXXXXXXXX_!!1134915854.jpg" alt="图 12 恢复完成"><br>恢复完了选择 Quit 退出 PhtoRec。被恢复的文件是 recup_dir.x 的若干数字子组合为文件名被保存在当前目录的/recup_dir 子目录下的。</p>
<h3 id="功能对比">功能对比</h3><h4 id="表_1-Linux_删除文件恢复工具">表 1.Linux 删除文件恢复工具</h4><table>
<thead>
<tr>
<th>工具名称/功能对比</th>
<th>工作界面</th>
<th>功能简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>foremost</td>
<td>命令行</td>
<td>formost 是一个基于文件头和尾部信息以及文件的内建数据结构恢复文件的命令行工具</td>
</tr>
<tr>
<td>extundelete</td>
<td>命令行</td>
<td>Extundelete 是 ext3、ext4 文件系统的恢复工具</td>
</tr>
<tr>
<td>scalpel</td>
<td>命令行</td>
<td>scalpel 是一种快速文件恢复工具，它通过读取文件系统的数据库来恢复文件。它是独立于文件系统的</td>
</tr>
<tr>
<td>testdisk</td>
<td>字符终端</td>
<td>Testdisk 支持分区表恢复、raid 恢复、分区恢复</td>
</tr>
<tr>
<td>phtorec</td>
<td>字符终端</td>
<td>photorec 用来恢复硬盘、光盘中丢失的视频、文档、压缩包等文件，或从数码相机存储卡中恢复丢失的图片</td>
</tr>
</tbody>
</table>
<h2 id="总结">总结</h2><p>可以使用 testdisk 进行文件恢复的场合，也就是硬盘上的分区（该分区有原有数据纪录）已经损坏的情形。但是如果损坏之后，重新再次做成了新分区的话，文件恢复的可能性比较小，很困难。photorec 不仅针对 硬盘、USB 设备、CD-ROM、SD 卡，而且还可以对其它存储设备进行应用。因此大多数常用的文件如果被误操作的话，均可利用其来进行恢复，只不过它的初衷是针对照片而制作的。</p>
<h1 id="转载">转载</h1><p><a href="http://www.ibm.com/developerworks/cn/linux/1312_caoyq_linuxrestore/" target="_blank" rel="external">http://www.ibm.com/developerworks/cn/linux/1312_caoyq_linuxrestore/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本来从未想过要查找linux数据恢复相关的文章资料, 怎料自己手贱把自己的Blog给<code>rm -rf</code>了呢? 简直神作了, 虽然并没有把数据恢复回来, 但是经过测试下面的方法是可行的, 就顺手给记录下来, 用于惊醒自己这天所犯下的sb事. </p>]]>
    
    </summary>
    
      <category term="ShareSDK" scheme="http://huyaohui.com/tags/ShareSDK/"/>
    
      <category term="Swift" scheme="http://huyaohui.com/tags/Swift/"/>
    
      <category term="iOS" scheme="http://huyaohui.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://huyaohui.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS Swift 使用ShareSDK完成第三方登录和分享]]></title>
    <link href="http://huyaohui.com/2016/01/03/iOS-Swift-%E4%BD%BF%E7%94%A8ShareSDK%E5%AE%8C%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95%E5%92%8C%E5%88%86%E4%BA%AB/"/>
    <id>http://huyaohui.com/2016/01/03/iOS-Swift-使用ShareSDK完成第三方登录和分享/</id>
    <published>2016-01-03T05:19:08.000Z</published>
    <updated>2016-01-03T06:26:37.000Z</updated>
    <content type="html"><![CDATA[<p>关于第三方分享和登录本身就是一个挺大的坑, Swift的第三方分享和登录就更不用说了, 坑上加坑, 这里记录下来是如何把ShareSDK给集成到项目中去的</p>
<a id="more"></a>
<p>Pass… (先占坑, 等有时间再写)</p>
<h1 id="参考资料">参考资料</h1><p><a href="http://www.jianshu.com/p/e374732f54f0" target="_blank" rel="external">http://www.jianshu.com/p/e374732f54f0</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>关于第三方分享和登录本身就是一个挺大的坑, Swift的第三方分享和登录就更不用说了, 坑上加坑, 这里记录下来是如何把ShareSDK给集成到项目中去的</p>]]>
    
    </summary>
    
      <category term="Note" scheme="http://huyaohui.com/tags/Note/"/>
    
      <category term="ShareSDK" scheme="http://huyaohui.com/tags/ShareSDK/"/>
    
      <category term="Swift" scheme="http://huyaohui.com/tags/Swift/"/>
    
      <category term="iOS" scheme="http://huyaohui.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://huyaohui.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[SSH keys 公钥配置与使用]]></title>
    <link href="http://huyaohui.com/2015/12/31/SSH-keys-%E5%85%AC%E9%92%A5%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://huyaohui.com/2015/12/31/SSH-keys-公钥配置与使用/</id>
    <published>2015-12-31T15:28:46.000Z</published>
    <updated>2016-01-03T05:40:11.000Z</updated>
    <content type="html"><![CDATA[<p>SSH 密钥对可以让您方便的登录到 SSH 服务器，而无需输入密码。由于您无需发送您的密码到网络中，SSH 密钥对被认为是更加安全的方式。再加上使用密码短语 (passphrase) 的使用，安全性会更上一层楼。<br>同时，我们可以使用 SSH agent 来帮助我们记住密码短语，无需我们记住每一个密钥对的密码短语，减轻了我们的负担。</p>
<a id="more"></a>
<h2 id="生成SSH_keys">生成SSH keys</h2><p>SSH 密钥对总是成双出现的，一把公钥，一把私钥。公钥可以自由的放在您所需要连接的 SSH 服务器上，而私钥必须稳妥的保管好。<br>所谓”公钥登录”，原理很简单，就是用户将自己的公钥储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录 shell，不再要求密码。这样子，我们即可保证了整个登录过程的安全，也不会受到中间人攻击。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行 ssh-keygen 命令</span></span><br><span class="line"><span class="comment"># 下面需要输入私钥, 当然也可以不输入, 默认为空</span></span><br><span class="line">$ ssh-keygen  </span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/home/makehui/.ssh/id_rsa): </span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /home/makehui/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /home/makehui/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">bb:<span class="number">26</span>:<span class="number">1</span>e:b2:d9:b3:<span class="number">0</span>f:<span class="number">29</span>:<span class="number">84</span>:<span class="number">99</span>:<span class="number">52</span>:<span class="number">24</span>:a2:<span class="number">56</span>:fb:<span class="number">33</span> makehui@MakeHui-Ubuntu14-<span class="number">0</span>-<span class="number">4</span></span><br><span class="line">The key<span class="string">'s randomart image is:</span><br><span class="line">+--[ RSA 2048]----+</span><br><span class="line">|o ..             |</span><br><span class="line">|oo. .            |</span><br><span class="line">|....             |</span><br><span class="line">|.. +.            |</span><br><span class="line">|. + .E  S        |</span><br><span class="line">| . .  o. .       |</span><br><span class="line">|    o + .        |</span><br><span class="line">|     *oo..       |</span><br><span class="line">|    o.+*o        |</span><br><span class="line">+-----------------+</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看SSH keys</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>
<h2 id="配置GitHub_SSH_keys">配置GitHub SSH keys</h2><ol>
<li>点击GitHub头像</li>
<li>Settings</li>
<li>在左边菜单栏点击SSH keys</li>
<li>点击Add SSH keys</li>
<li>填写Title, 去个名字</li>
<li>复制上面得到的SSH keys到Key文本框</li>
<li>点击Add key完成</li>
</ol>
<h2 id="参考资料">参考资料</h2><p><a href="https://wiki.archlinux.org/index.php/SSH_keys_(简体中文" target="_blank" rel="external">https://wiki.archlinux.org/index.php/SSH_keys_(简体中文</a>)<br><a href="http://blog.csdn.net/houyp520/article/details/9401745" target="_blank" rel="external">http://blog.csdn.net/houyp520/article/details/9401745</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>SSH 密钥对可以让您方便的登录到 SSH 服务器，而无需输入密码。由于您无需发送您的密码到网络中，SSH 密钥对被认为是更加安全的方式。再加上使用密码短语 (passphrase) 的使用，安全性会更上一层楼。<br>同时，我们可以使用 SSH agent 来帮助我们记住密码短语，无需我们记住每一个密钥对的密码短语，减轻了我们的负担。</p>]]>
    
    </summary>
    
      <category term="GitHub" scheme="http://huyaohui.com/tags/GitHub/"/>
    
      <category term="Note" scheme="http://huyaohui.com/tags/Note/"/>
    
      <category term="SSH" scheme="http://huyaohui.com/tags/SSH/"/>
    
      <category term="SSH" scheme="http://huyaohui.com/categories/SSH/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Branckets 如何开发插件]]></title>
    <link href="http://huyaohui.com/2015/11/29/Branckets-%E5%A6%82%E4%BD%95%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6/"/>
    <id>http://huyaohui.com/2015/11/29/Branckets-如何开发插件/</id>
    <published>2015-11-29T06:08:12.000Z</published>
    <updated>2016-01-03T02:58:14.000Z</updated>
    <content type="html"><![CDATA[<p>有个功能Brackets一直没有, 也没有找到相关的插件, 所以转载官方的这篇关于<code>如何开发Brackets插件</code>的wiki, 方便自己有空的时候来学习下. </p>
<a id="more"></a>
<h2 id="如何开发Brackets插件">如何开发Brackets插件</h2><p>开发一个插件需要三个步骤：</p>
<ol>
<li><a href="https://github.com/adobe/brackets/wiki/How-to-write-extensions#creating-an-extension" target="_blank" rel="external">创建</a>基本的插件模板。</li>
<li><a href="https://github.com/adobe/brackets/wiki/How-to-write-extensions#wiki-common-how-tos" target="_blank" rel="external">开发</a>插件并<a href="https://github.com/adobe/brackets/wiki/How-to-write-extensions#testingdebugging-workflow" target="_blank" rel="external">调试</a>。</li>
<li><a href="https://github.com/adobe/brackets/wiki/How-to-write-extensions#publishing-extensions" target="_blank" rel="external">打包并发布</a>插件以供其他人使用</li>
</ol>
<p>通过以上链接阅读这些章节的详细内容！</p>
<h2 id="创建插件">创建插件</h2><ul>
<li>点击Brackets的“帮助&gt;显示插件目录”打开放置插件的文件夹。</li>
<li>插件文件夹的“user”文件夹，并以“插件的名称”为文件夹名创建一个新的文件夹，再在新建的文件夹中新建main.js文件。</li>
<li>为了快速开始，可以复制<a href="https://github.com/adobe/brackets/wiki/Simple-%22Hello-World%22-extension" target="_blank" rel="external">Simple “Hello World” extension</a>或[已存在的插件][<a href="https://github.com/adobe/brackets/wiki/Brackets-Extensions]，以开发相似的功能。" target="_blank" rel="external">https://github.com/adobe/brackets/wiki/Brackets-Extensions]，以开发相似的功能。</a></li>
<li>如果你对Brackets有任何建议，可以发送到<a href="https://groups.google.com/forum/#!forum/brackets-dev" target="_blank" rel="external">brackets-dev Google group</a>或<a href="http://freenode.net/" target="_blank" rel="external">#brackets IRC channel on freenode，Brackets</a>会尽早给予反馈（可能其他人也会与你有相同的想法）。</li>
</ul>
<p>*注意：因为通过Brackets的插件管理器很容易删除正在开发的插件，所以更安全的方式是把插件文件夹新建在Brackets安装目录下的src/extensions/dev目录下。可通过修改权限保证文件夹是可写的，or by <a href="https://github.com/adobe/brackets/wiki/How-to-Hack-on-Brackets" target="_blank" rel="external">cloning the Brackets source</a> and using that copy.</p>
<h2 id="测试或调试">测试或调试</h2><ul>
<li>编辑main.js文件。</li>
<li>保存文件并通过Brackets的”Debug&gt;Reload Brackets”重启Brackets，以进行测试。</li>
<li>通过Brackets的”Debug&gt;Show Developer Tools”（依赖于Chrome浏览器），并可使用Chrome浏览器的控制台。<ul>
<li>在首次打开Developer Tools时，必须设置为<a href="https://groups.google.com/forum/?fromgroups=#!topic/brackets-dev/E5iqcD8VqD4" target="_blank" rel="external">禁用缓存</a>，否则在Developer Tools打开的状态下重新加载Brackets，不能反映出插件修改之后的变化。</li>
</ul>
</li>
</ul>
<p>查看<a href="https://github.com/adobe/brackets/wiki/Debugging-Brackets" target="_blank" rel="external">Debugging Brackets</a>获取更完善描述。</p>
<p>还可以为插件编写单元测试。</p>
<h2 id="发布插件">发布插件</h2><ol>
<li>向main.js所在的目录中添加<a href="https://github.com/adobe/brackets/wiki/Extension-package-format#packagejson-format" target="_blank" rel="external">package.json</a>文件。</li>
<li>打包整个插件目录为ZIP格式（更快捷的使用GitHub的“Download ZIP”按钮下载ZIP包）或通过命令git archive —format zip -o yourextension.zip master生成ZIP包。</li>
<li>通过上传ZIP包到<a href="https://brackets-registry.aboutweb.com/" target="_blank" rel="external">Brackets Extension Registry</a>，以发布插件</li>
</ol>
<p>更多信息，参见<a href="https://github.com/adobe/brackets/wiki/Extension-Registry-Help" target="_blank" rel="external">Extension Registry Help</a>。</p>
<h2 id="常见操作">常见操作</h2><h3 id="使用模块">使用模块</h3><ul>
<li>从插件的文件夹树中加载模块，使用require()方法，传入相对于插件根目录的相对路径做为参数。</li>
<li>加载Brackets的核心模块，使用brackets.getModule()方法，传入相对于Brackets的src目录的相对路径做为参数。</li>
<li>不能到其他插件中加载模块（暂时还不支持）</li>
</ul>
<p>也可以插件中使用其他的文件，例如下文的“Load a CSS file”。</p>
<h3 id="添加菜单项与键盘快捷键">添加菜单项与键盘快捷键</h3><p>查看<a href="https://github.com/adobe/brackets/wiki/Simple-%22Hello-World%22-extension" target="_blank" rel="external">Simple “Hello World” extension</a>代码示例。</p>
<p>对于任何一个新的行为，都要通过CommandManager.resiger()方法注册一个Command以实现它。Command通过Command Id（字符串类型）映射到实现行为的函数。使用包命名的方式为Command Id命名（例如：myorg.myextendsion.mycommand）以避免与其他插件冲突。（参见：<a href="https://github.com/adobe/brackets/wiki/Brackets%20Development%20How%20Tos#commands" target="_blank" rel="external">higher-level overview of command architecture</a>）。</p>
<p><em>添加菜单项:</em> 通过Menus.getMenu()方法，传入Menus.AppMenuBar常量（当前包含FILE_MENU，EDIT_MENU, VIEW_MENU, NAVIGATE_MENU或HELP_MENU），获取顶级菜单。再通过theMenu.addMenuItem()方法，传入要执行的Command Id以添加菜单项。这样就把菜单项与Command关联起来，Command被创建后，它的名称将被显示为菜单项标签。</p>
<p>约定，调用addMenuItems()方法的同时为Command创建键盘快捷键。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取顶级的菜单</span></span><br><span class="line"><span class="keyword">var</span> editorMenu = Menus.getMenu(Menus.AppMenuBar.EDIT_MENU);</span><br><span class="line"><span class="comment">// 以包命名风格命名Command Id</span></span><br><span class="line"><span class="keyword">var</span> commandId = <span class="string">"com.wanggit.commandId"</span>;</span><br><span class="line"><span class="comment">// 注册Command</span></span><br><span class="line">CommandManager.register(<span class="string">"Custom Command"</span>, commandId, customFunction);</span><br><span class="line"><span class="comment">// 添加菜单项，并指菜单项执行commandId的命令，快捷键为Ctrl-Shift-O</span></span><br><span class="line">editorMenu.addMenuItem(commandId, <span class="string">"Ctrl-Shift-O"</span>);</span><br></pre></td></tr></table></figure>
<p><em>添加上下文菜单项:</em> 通过Menus.getContextMenu()方法，传入Menus.ContextMenuIds常量（目前包含EDITOR_MENU, INLINE_EDITOR_MENU, PROJECT_MENU或WORKING_SET_MENU），可获取上下文菜单。通过theContextMenu.addMenuItem()方法，传入要执行的Command Id以添加上下文菜单项，上下文菜单项标签的显示与菜单项相同。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取编辑器的上下文菜单</span></span><br><span class="line"><span class="keyword">var</span> contextMenu = Menu.getContextMenu(Menus.ContextMenuIds.EDITOR_MENU);</span><br><span class="line"><span class="comment">// 省略Command的定义</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="comment">// 添加上下文菜单，并指定要执行的Command，指定快捷键</span></span><br><span class="line">contextMenu.addMenuItem(commandId, <span class="string">"Ctrl-Shift-L"</span>);</span><br></pre></td></tr></table></figure>
<p><em>添加菜单分隔线:</em> 依据以上的说明获取顶级菜单或上下文菜单，再通过theMenu.addMenuDivider()添加菜单分隔线。这个方法总要把分隔线添加到菜单当前状态的最后一个位置。通过传入first与last参数，指分隔线的位置。另外，还可以通过传入before或after与相对那个菜单的Command Id，以指定分隔线显示的某菜单项之前或之后。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加一个分隔线到菜单当前状态的最后一个位置</span></span><br><span class="line">menu.addMenuDivider();</span><br><span class="line"><span class="comment">// 添加到最前面，相关参数还有FIRST,LAST,BEFORE,AFTER</span></span><br><span class="line">menu.addMenuDivider(Menus.FIRST);</span><br><span class="line"><span class="comment">// 在Commands.EDIT_FIND命令对应的菜单前添加分隔线</span></span><br><span class="line">menu.addMenuDivider(Menus.before, Commands.EDIT_FIND);</span><br></pre></td></tr></table></figure>
<p><em>添加快捷键:</em> 通过KeyBindingManager.addBinding()方法，传入快捷键要执行的Command Id与快捷键组合，可以在不关联菜单项的情况下新建快捷键。务必在Brackets Shortcuts页面查看那些快捷键是没被占用，并把自定义的快捷键添中到此页面列表中。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CommandManager.register(<span class="string">"Handler Enter"</span>, commandId, handlerEnter);</span><br><span class="line">KeyBindingManager.addBinding(commandId, <span class="string">"Ctrl-Enter"</span>, <span class="string">"linux"</span>);</span><br></pre></td></tr></table></figure>
<p>通过拒绝(decline)键盘事件，并允许其他功能处理这个键盘事件，那么就一定要在Command的执行方法中返回一个已reject()的$.Promise对象。（如果想要光标在某个位置时重写Enter的事件，那么这就非常有用处）（此功能在Sprint 18及以上的版本有效）。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> commandId = <span class="string">"wanggit.test"</span>;</span><br><span class="line"><span class="comment">// 捕捉Enter事件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handlerEnter</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Handler Enter"</span>);</span><br><span class="line">    <span class="comment">// 创建Deferred对象</span></span><br><span class="line">    <span class="keyword">var</span> deferred = <span class="keyword">new</span> $.Deferred();</span><br><span class="line">    <span class="comment">// 拒绝Enter事件，在调用reject方法之后，并返回$.Promise对象，那么此时Enter事件，还可以被其他功能捕捉。</span></span><br><span class="line">    deferred.reject();</span><br><span class="line">    <span class="comment">// 返回$.Promise对象。如果不返回一个已调用过reject方法的$.Promise对象，那么其他功能就不能再捕捉到Enter事件了。</span></span><br><span class="line">    <span class="keyword">return</span> deferred.promise();</span><br><span class="line">&#125;</span><br><span class="line">CommandManager.register(<span class="string">"Handler Enter"</span>, commandId, handlerEnter);</span><br><span class="line"><span class="comment">// 绑定键盘事件</span></span><br><span class="line">KeyBindingManager.addBinding(commandId, <span class="string">"Enter"</span>, <span class="string">"linux"</span>);</span><br></pre></td></tr></table></figure>
<h3 id="添加新UI元素">添加新UI元素</h3><p>向Edtior的下面添加Panel:首先Panel要添加.bottom-panel，具体可以参见JSLint bottom-panel.html的例子。通过PanelManager.createBottomPanel(“yourExtension.name”, $(panelHtml))可以在状态栏之上新建一个Panel。You may see Resizer.makeResizable()and manual DOM insertion of panels in some extensions but this parctice is being phased out since the introduction of PanelManager.</p>
<h2 id="参考资料">参考资料</h2><p><a href="https://github.com/adobe/brackets/wiki/如何开发插件" target="_blank" rel="external">如何开发插件</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>有个功能Brackets一直没有, 也没有找到相关的插件, 所以转载官方的这篇关于<code>如何开发Brackets插件</code>的wiki, 方便自己有空的时候来学习下. </p>]]>
    
    </summary>
    
      <category term="Branckets" scheme="http://huyaohui.com/tags/Branckets/"/>
    
      <category term="Plugin" scheme="http://huyaohui.com/tags/Plugin/"/>
    
      <category term="TextEditor" scheme="http://huyaohui.com/tags/TextEditor/"/>
    
      <category term="TextEditor" scheme="http://huyaohui.com/categories/TextEditor/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Branckets 常用插件说明]]></title>
    <link href="http://huyaohui.com/2015/11/28/Branckets-%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E8%AF%B4%E6%98%8E/"/>
    <id>http://huyaohui.com/2015/11/28/Branckets-常用插件说明/</id>
    <published>2015-11-28T10:33:19.000Z</published>
    <updated>2016-01-03T02:58:06.000Z</updated>
    <content type="html"><![CDATA[<p>上面对Branckets做了一个简单的介绍<a href="/2015/11/28/Branckets新一代Web开发编码神器/">-&gt;Branckets新一代Web开发编码神器</a>, 这里我们来说说广大的开发者为Branckets开发的强大插件, 有了它们Branckets, 简直如虎添翼, 分分钟把集成IDE秒成渣. </p>
<a id="more"></a>
<h2 id="UTF8_Converter">UTF8 Converter</h2><p>这个什么好解释的咯, 就只是UTF8.</p>
<p><a href="https://github.com/Armacryss/brackets-utf8-converter" target="_blank" rel="external">https://github.com/Armacryss/brackets-utf8-converter</a></p>
<h2 id="Shizimily_Multi-Encoding_for_Brackets">Shizimily Multi-Encoding for Brackets</h2><p>Brackets默认是不支持GBK编码的, 特别是在windows上GBK编码是文本的默认编码, 虽然自己知道可以更改编码, 但是如果要协同工作的话, 碰上了不同编码的情况还是很蛋痛的</p>
<p><a href="https://github.com/Hiromi-Ayase/brackets-shizimily-multiencoding" target="_blank" rel="external">https://github.com/Hiromi-Ayase/brackets-shizimily-multiencoding</a></p>
<h2 id="Brackets_Beautify">Brackets Beautify</h2><p>代码美化插件, 这个自然是必装的咯, 支持 HTML, CSS, 和 JavaScrip 三种文件的格式化.</p>
<p>使用方法: </p>
<ol>
<li>Edit &gt; Beautify</li>
<li>Windows/Linux: Ctrl-Alt-B</li>
<li>Windows: Ctrl-Shift-L</li>
<li>MacOSX: Cmd-Shift-L</li>
</ol>
<p><a href="https://github.com/brackets-beautify/brackets-beautify" target="_blank" rel="external">https://github.com/brackets-beautify/brackets-beautify</a></p>
<h2 id="Brackets_Autoprefixer">Brackets Autoprefixer</h2><p>使用CanIUse上的css3数据，自动补全css3前缀和浏览器兼容，不过可能有些新了。有一些旧版本的浏览器会被抛弃掉</p>
<p><a href="https://github.com/mikaeljorhult/brackets-autoprefixer" target="_blank" rel="external">https://github.com/mikaeljorhult/brackets-autoprefixer</a></p>
<h2 id="Brackets_Icons">Brackets Icons</h2><p>顾名思义, 按照文件的扩展名, 给它安排相应的图标</p>
<p><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2YDcNhFXXXXcgXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
<p><a href="https://github.com/ivogabe/Brackets-Icons" target="_blank" rel="external">https://github.com/ivogabe/Brackets-Icons</a></p>
<h2 id="Brackets_Document_Toolbar(with_tabs)">Brackets Document Toolbar(with tabs)</h2><p>Tab栏, 说来也奇怪为什么官方版本不支持这个功能. 随便一提, 早期的版本也不支持代码折叠, 貌似是从1.5开始支持了. 由此推断以后或许会支持这个功能.</p>
<p><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2htIPhFXXXXb5XXXXXXXXXXXX_!!1134915854.gif" alt=""></p>
<p><a href="https://github.com/dnbard/brackets-documents-toolbar" target="_blank" rel="external">https://github.com/dnbard/brackets-documents-toolbar</a></p>
<h2 id="brackets-quick-search">brackets-quick-search</h2><p>选择文本后高亮显示相同的文本, 和Brackets Document Toolbar(with tabs), 官方同样不支持这个功能</p>
<p><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB27pxqhVXXXXX9XXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
<p><a href="https://github.com/enturn/brackets-quick-search" target="_blank" rel="external">https://github.com/enturn/brackets-quick-search</a></p>
<h2 id="BracketstoIX_extension">BracketstoIX extension</h2><p>对Brackets增加的一些扩展功能</p>
<p><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2XDpdhVXXXXcoXXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
<p><a href="https://github.com/apptoix/bracketstoix" target="_blank" rel="external">https://github.com/apptoix/bracketstoix</a></p>
<h2 id="brackets-minimap">brackets-minimap</h2><p>你使用过Submit的话估计你一定会对编辑框右侧的那个代码地图印象会相当深吧, brackets当然也会支持这种功能咯, 只是不是官方支持的而已, 不过也没关系, 使用起来是一样一样的. </p>
<p><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2l3gNhFXXXXcrXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
<p><a href="https://github.com/zorgzerg/brackets-minimap" target="_blank" rel="external">https://github.com/zorgzerg/brackets-minimap</a></p>
<h2 id="Brackets_Terminal">Brackets Terminal</h2><p>让你能太编码的过程很方便的调用控制台命令, 而不用切换到控制台, 简直爽有木有</p>
<p><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2TIkThFXXXXbyXXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
<p><a href="https://github.com/artoale/brackets-terminal" target="_blank" rel="external">https://github.com/artoale/brackets-terminal</a></p>
<h2 id="brackets-sftp-upload">brackets-sftp-upload</h2><p>代码时时同步到线上服务器, 免去了启动ftp的时间, 很方便</p>
<p><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2SUAEhFXXXXabXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
<p><a href="https://github.com/bigeyex/brackets-sftp-upload" target="_blank" rel="external">https://github.com/bigeyex/brackets-sftp-upload</a></p>
<h2 id="Markdown_Preview">Markdown Preview</h2><p>对于经常需要写Markdown的你来说, 是不是需要时不时的预览下呢, 那么有了这个插件, 你就不用再进行编译和切换到浏览器查看了, 直接在编辑器内完成一切操作, 超nice.</p>
<p><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB2VD.2hFXXXXXOXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
<p><a href="https://github.com/gruehle/MarkdownPreview" target="_blank" rel="external">https://github.com/gruehle/MarkdownPreview</a></p>
<h2 id="Extract_for_Brackets">Extract for Brackets</h2><p>Adobe 官方插件, 可以预览PSD，点击图层，然后输入css属性，看到没有，图层的样式自动跑出来啦，有木有有木有？！width、height、left、top、color、background-color、opacity应有尽有，还能测量两个元素之间的距离，再也不用到PS里手工测量和偷瞄CSS Hat的代码啦！如果是文字图层，还可以点击copy text，文字就到粘贴板上啦。如果是普通图层，填写background或img的时候，还会自动切图到你的文件夹耶！要不要这么霸气呀？！<br>(PS: 当然对于大陆用户来说相当然并卵的插件o(╯□╰)o, 不支持离线, 而且最大只支持15MB, 我就只能呵呵)</p>
<p><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB29Qw1hFXXXXXCXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
<p><a href="https://helpx.adobe.com/creative-cloud/help/extract-for-brackets.html" target="_blank" rel="external">https://helpx.adobe.com/creative-cloud/help/extract-for-brackets.html</a></p>
<h2 id="QuickDocsJS">QuickDocsJS</h2><p>快速查看javascript帮助文档<br>使用: CMD+K</p>
<p><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB25Ho1hFXXXXaaXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
<p><a href="https://github.com/Wikunia/brackets-QuickDocsJS" target="_blank" rel="external">https://github.com/Wikunia/brackets-QuickDocsJS</a></p>
<h2 id="QuickDocsPHP">QuickDocsPHP</h2><p>快速查看PHP帮助文档<br>使用: CMD+K</p>
<p><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2dOxqhVXXXXahXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
<p><a href="https://github.com/Wikunia/brackets-QuickDocsPHP" target="_blank" rel="external">https://github.com/Wikunia/brackets-QuickDocsPHP</a></p>
<h2 id="brackets-jshint">brackets-jshint</h2><p>javascript代码提示, 方便第一时间发现你编码时不规范的地方</p>
<p><a href="https://github.com/cfjedimaster/brackets-jshint" target="_blank" rel="external">https://github.com/cfjedimaster/brackets-jshint</a></p>
<h2 id="brackets-csslint">brackets-csslint</h2><p>css代码提示, 方便第一时间发现你编码时不规范的地方</p>
<p><a href="https://github.com/cfjedimaster/brackets-csslint" target="_blank" rel="external">https://github.com/cfjedimaster/brackets-csslint</a></p>
<h2 id="Brackets-Git">Brackets-Git</h2><p>集成Git到你的Brackets中</p>
<p><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2tVgPhFXXXXb8XXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
<p>Main panel of Brackets Git<br><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2SPZZhFXXXXaCXXXXXXXXXXXX_!!1134915854.jpg" alt="Main panel of Brackets Git"></p>
<p>History panel of Brackets Git<br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2hsMVhFXXXXaYXXXXXXXXXXXX_!!1134915854.jpg" alt="History panel of Brackets Git"></p>
<p>Details view for a specific commit<br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2g7UKhFXXXXcZXXXXXXXXXXXX_!!1134915854.jpg" alt="Details view for a specific commit"></p>
<p>Commit dialog<br><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB20qEFhFXXXXafXpXXXXXXXXXX_!!1134915854.jpg" alt="Commit dialog"></p>
<p><a href="https://github.com/zaggino/brackets-git" target="_blank" rel="external">https://github.com/zaggino/brackets-git</a></p>
<h2 id="html-designer">html-designer</h2><p>一个掉渣天的功能, 虽然并不新鲜, 但是能把他集成到Brackets中还是得费很大功夫的, 必须致敬.<br>使用拖拽的方式进行html布局, 详情请看下面GitHub</p>
<p><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2qzs6hFXXXXXkXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
<p><a href="https://github.com/swmitra/html-designer" target="_blank" rel="external">https://github.com/swmitra/html-designer</a></p>
<h2 id="FuncDocr">FuncDocr</h2><p>快速生成文档注释, 相当方便, 比Sublime的那个参见还多了一个选择类型的功能, 虽然有点然并卵, 但是还是相当赞的<br>支持 javascript and php<br>使用方法: <code>/**</code> + Enter</p>
<p><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB213QUhFXXXXa2XXXXXXXXXXXX_!!1134915854.gif" alt=""></p>
<p><a href="https://github.com/wikunia/brackets-funcdocr" target="_blank" rel="external">https://github.com/wikunia/brackets-funcdocr</a></p>
<h2 id="Emmet_plugin_for_Brackets_editor">Emmet plugin for Brackets editor</h2><p>HTML, CSS 快速编辑插件, 想必大家都知道的, 这里就不过多阐述, 以后可能会单独另起篇幅来说明. </p>
<p><a href="http://emmet.io/" target="_blank" rel="external">http://emmet.io/</a><br><a href="https://github.com/emmetio/brackets-emmet" target="_blank" rel="external">https://github.com/emmetio/brackets-emmet</a></p>
<h2 id="PHP-SmartHints">PHP-SmartHints</h2><p>一个十分好用的PHP代码提示, 补全插件</p>
<p><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2Hi.RhFXXXXbQXXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
<p><a href="https://github.com/Brackets-PHP/Brackets-PHP-SmartHints" target="_blank" rel="external">https://github.com/Brackets-PHP/Brackets-PHP-SmartHints</a></p>
<h2 id="Bootstrap_Snippets_for_Brackets">Bootstrap Snippets for Brackets</h2><p>快速生成Bootstrap代码, 详细使用方法查看下面GitHub地址</p>
<p><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2QK7RhFXXXXbVXXXXXXXXXXXX_!!1134915854.gif" alt=""></p>
<p><a href="https://github.com/acbarbosa1964/acb-bootstrap-snippets" target="_blank" rel="external">https://github.com/acbarbosa1964/acb-bootstrap-snippets</a></p>
<h2 id="更多优秀插件">更多优秀插件</h2><p><a href="https://ingorichter.github.io/BracketsExtensionTweetBot/" target="_blank" rel="external">https://ingorichter.github.io/BracketsExtensionTweetBot/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>上面对Branckets做了一个简单的介绍<a href="/2015/11/28/Branckets新一代Web开发编码神器/">-&gt;Branckets新一代Web开发编码神器</a>, 这里我们来说说广大的开发者为Branckets开发的强大插件, 有了它们Branckets, 简直如虎添翼, 分分钟把集成IDE秒成渣. </p>]]>
    
    </summary>
    
      <category term="Branckets" scheme="http://huyaohui.com/tags/Branckets/"/>
    
      <category term="Plugin" scheme="http://huyaohui.com/tags/Plugin/"/>
    
      <category term="TextEditor" scheme="http://huyaohui.com/tags/TextEditor/"/>
    
      <category term="TextEditor" scheme="http://huyaohui.com/categories/TextEditor/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Branckets新一代Web开发编码神器]]></title>
    <link href="http://huyaohui.com/2015/11/28/Branckets%E6%96%B0%E4%B8%80%E4%BB%A3Web%E5%BC%80%E5%8F%91%E7%BC%96%E7%A0%81%E7%A5%9E%E5%99%A8/"/>
    <id>http://huyaohui.com/2015/11/28/Branckets新一代Web开发编码神器/</id>
    <published>2015-11-28T08:27:33.000Z</published>
    <updated>2016-01-03T02:58:18.000Z</updated>
    <content type="html"><![CDATA[<p>Brackets是一款强大免费的Web前端开发神器, 对于前端开发来说用起来特别方便, 第一次在YouTube上看到, 当时就眼前一亮, 还以为Sublime的一个什么漂亮主题呢, 最后反复回去查看才发现不是, 随下载下来使用, 感觉得它用起来特别舒服, 界面简洁, 敲代码感觉软软的, 交互感觉也挺好, 当前最新版, 比早期我使用的1.0预览版好太多了, 总得来说比Sublime要好, 现在已经彻底弃了Sublime了, 喜欢轻量级文本编辑器的小伙伴可以尝试下, 绝对物超所值.</p>
<a id="more"></a>
<p>Brackets 是一款使用 HTML，CSS，JavaScript 创建的开源的针对 Web 开发的编辑器。你可能在宁皓网的视频里见过这款编辑器。实时预览，快速编辑，跨平台，可扩展，开源，让 Brackets 成为一款非常优秀的编辑器。</p>
<p><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB2PvwuhFXXXXbhXpXXXXXXXXXX_!!1134915854.png" alt=""></p>
<h2 id="安装">安装</h2><p>打开 Brackets.io，点击 Download Brackets ，网页会根据你的操作系统，为你提供对应版本的 Brackets 编辑器。你也可以在所有发布版本里面自己来选择。如果是自己选择下载，需要注意软件的格式，一般 .dmg 是用在 Mac 系统上的软件，.msi 可以在 Windows 系统上安装。</p>
<h2 id="切换语言">切换语言</h2><p>Brackets 支持多种语言，默认安装以后界面上是英文的，你可以选择自己喜欢的语言。</p>
<p>Debug -&gt; Switch Language<br>点开下拉菜单，选择你想要的语言<br>点击 Reload Brackets<br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2ZtMWhFXXXXX6XXXXXXXXXXXX_!!1134915854.png" alt=""></p>
<h2 id="打开目录">打开目录</h2><p>一般开始一个项目，你可以去新建一个目录，把项目所需求的文件放在这个目录下面，Brackets 支持打开整个目录，通过编辑器边栏上的树形结构，可以方便的管理项目文件 。</p>
<p>方法一：打开菜单，文件 -&gt; 打开目录<br>方法二：使用快捷键：alt + command + O<br>这个目录的结构会显示在编辑器的边栏上，点开对应的目录，会继续显示这个目录里所包含的东西。你也可以在不需要边栏的时候隐藏它（视图 -&gt; 隐藏边栏 或 shift + command + H）。</p>
<p><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB2lRsohFXXXXcdXpXXXXXXXXXX_!!1134915854.png" alt=""></p>
<h2 id="快速导航">快速导航</h2><p>使用快速导航，可以快速找到项目里的文件。</p>
<p>方法一：打开菜单：导航 -&gt; 打开快速导航<br>方法二：使用快捷键：shift + command + O<br>直接输入想要找的文件名称，Brackets 会给你一个包含这个文件名的文件列表，点击对应的文件，可以打开这个文件。</p>
<p><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB2wPAWhFXXXXabXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
<h2 id="工作区">工作区</h2><p>打开的文件，会在 工作区 里面显示出来，点击对应的文件，可以快速地在不同的文件之间切换。已经修改的文件没有保存，在文件名称的左边会显示一个 圆点。</p>
<p><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2csE0hFXXXXXGXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
<h2 id="实时预览">实时预览</h2><p>方法一：打开菜单：文件 -&gt; 实时预览<br>方法二：使用快捷键：alt + command + P<br>方法三：点击主界面右上角的 闪电 图标<br>Brackets 会为你打开一个 Chrome 浏览器的窗口，实时显示正在编辑的文档。也就是，你现在可以去修改文档里的内容，或者文档所链接的样式表还有脚本文件，所做的修改会实时的在浏览器中显示。注意，在实时预览时，你不能使用浏览器的开发者工具，一但打开开发者工具，实时预览就会失效了。</p>
<p><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB27YAOhFXXXXbLXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
<p>如果不特别指定，Brackets 会使用内置的 Web Server 实时预览文件，你也可以去为实时预览指定一个 Web Server ，比如你可能想实时预览 PHP 文件，那么，你可以使用搭建在本地电脑上的开发环境，把项目目录放在你自己的服务器的目录里面，比如 semantic 这个目录的下面，这样，使用 localhost/semantic 这个地址可以访问到你的项目，那么你可以把这个地址做为实时预览的基本地址。</p>
<p>打开 文件 -&gt; 项目设置，然后输入预览的地址，例如：<code>http://localhost/semantic</code>，这样你在使用实时预览的时候，会基于这个地址去预览文件。</p>
<p><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2ly.1hFXXXXXsXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
<h2 id="快速编辑">快速编辑</h2><p>方法一：打开菜单：导航 -&gt; 快速编辑<br>方法二：使用快捷键：command + E<br>Brackets 允许我们快速去编辑 HTML 或者 CSS 文档。快速编辑 HTML 文档，可以去为选中的元素快速添加或者修改样式。编辑器会给你显示出应用在所选中元素上的所有的样式，选中对应的样式，直接去修改，这样你就不需要再去找到对应的样式表，对应的地方去修改了。快速编辑同样适用 CSS 文档，比如放在颜色属性上，会显示一个颜色选择器，或者动画属性上，会显示一个可以调整动画曲线的工具。非常非常方便。</p>
<p><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB2d0wwhFXXXXbeXpXXXXXXXXXX_!!1134915854.png" alt=""></p>
<h2 id="扩展">扩展</h2><p>你可以为 Brackets 编辑安装扩展来增加它的功能。 在 Brackets Extension Registry 里可以查看可用的扩展，在这里，你也可以提交自己编写的扩展。</p>
<p>方法一：文件 -&gt; 扩展管理器<br>方法二：点击主界面右上角的积木样式的图标（闪电图标下面的那个）<br>打开 扩展管理器 以后，在 可获取 这个选项卡里面，可以找到想要使用的扩展，点击 安装，可以安装这个扩展。打开 已安装 这个选项卡，可以管理已经安装在编辑器上的扩展，在这里，你可以升级或移除这些扩展。</p>
<p><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB2lhUqhFXXXXb2XpXXXXXXXXXX_!!1134915854.png" alt=""></p>
<h2 id="常用扩展">常用扩展</h2><p><a href="/2015/11/28/Branckets-常用插件说明/">Branckets 常用插件说明</a></p>
<h2 id="总结">总结</h2><p>如果你还在用 Dreamweaver 开发 Web 项目，暂时把它放在一边，来试试 Brackets. (PS: 嘻嘻..)</p>
<h2 id="参考资料">参考资料</h2><p><a href="http://ninghao.net/blog/1405" target="_blank" rel="external">Web 设计与开发必备工具：Brackets 编辑器</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Brackets是一款强大免费的Web前端开发神器, 对于前端开发来说用起来特别方便, 第一次在YouTube上看到, 当时就眼前一亮, 还以为Sublime的一个什么漂亮主题呢, 最后反复回去查看才发现不是, 随下载下来使用, 感觉得它用起来特别舒服, 界面简洁, 敲代码感觉软软的, 交互感觉也挺好, 当前最新版, 比早期我使用的1.0预览版好太多了, 总得来说比Sublime要好, 现在已经彻底弃了Sublime了, 喜欢轻量级文本编辑器的小伙伴可以尝试下, 绝对物超所值.</p>]]>
    
    </summary>
    
      <category term="Branckets" scheme="http://huyaohui.com/tags/Branckets/"/>
    
      <category term="TextEditor" scheme="http://huyaohui.com/tags/TextEditor/"/>
    
      <category term="TextEditor" scheme="http://huyaohui.com/categories/TextEditor/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[WebApp HTML5 Canvas 压缩上传图片]]></title>
    <link href="http://huyaohui.com/2015/11/15/WebApp-Canvas-%E5%8E%8B%E7%BC%A9%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/"/>
    <id>http://huyaohui.com/2015/11/15/WebApp-Canvas-压缩上传图片/</id>
    <published>2015-11-15T09:53:38.000Z</published>
    <updated>2016-01-03T03:11:05.000Z</updated>
    <content type="html"><![CDATA[<p>关于H5图片上传一直是一个非常蛋痛的问题, 以至于现在都没有找到一个非常好的解决方案, 去年的年初尝试<a href="https://github.com/gokercebeci/canvasResize" target="_blank" rel="external">gokercebeci/canvasResize</a>这个方案勉强解决了这个问题, 但是并不算是十分理想, iOS上仍然是拍照后会莫名旋转, 曾经在GitHub上看到有位大神谢了一个库是专门处理这个问题的, 自己试了下貌似并不行, 也不知道现在是个什么情况了, 有空再去看下(但愿会有空吧), 这里提供一个Jquery版本的图片压缩上传的方案. </p>
<a id="more"></a>
<h2 id="代码实现">代码实现</h2><p>底层代码是通过Canvas进行了压缩, 最终返回base64编码的字符串, H5的前端压缩除了Canvas应该没有更便捷的方法了吧, 嘻嘻..</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"javascript:;"</span> <span class="attribute">id</span>=<span class="value">"change_avatar"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这里需要写两个input代码才能执行, 原因密 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">name</span>=<span class="value">"photo"</span> <span class="attribute">type</span>=<span class="value">"file"</span> <span class="attribute">style</span>=<span class="value">"display: none;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">name</span>=<span class="value">"photo"</span> <span class="attribute">type</span>=<span class="value">"file"</span> <span class="attribute">style</span>=<span class="value">"display: none;"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"js/jquery.exif.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"js/jquery.canvasResize.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span><br><span class="line">$(<span class="string">'#change_avatar'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'input[name=photo]'</span>).trigger(<span class="string">'click'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">'input[name=photo]'</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = e.target.files[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">// CANVAS RESIZING</span></span><br><span class="line">    $.canvasResize(file, &#123;</span><br><span class="line">        width: <span class="number">150</span>,</span><br><span class="line">        height: <span class="number">0</span>,</span><br><span class="line">        crop: <span class="literal">false</span>,</span><br><span class="line">        quality: <span class="number">80</span>,</span><br><span class="line">        callback: <span class="function"><span class="keyword">function</span>(<span class="params">base64_img, width, height</span>) </span>&#123;</span><br><span class="line">            $.post(</span><br><span class="line">                settings.jsonp_Server + <span class="string">'/user/upload_image'</span>, &#123;</span><br><span class="line">                    phone_num: phone_num,</span><br><span class="line">                    base64_img: base64_img,</span><br><span class="line">                    dataType: <span class="string">"jsonp"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                    alert(<span class="string">'上传成功'</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">"json"</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="参考资料">参考资料</h2><p><a href="https://github.com/gokercebeci/canvasResize" target="_blank" rel="external">gokercebeci/canvasResize</a><br><a href="https://github.com/think2011/LocalResizeIMG" target="_blank" rel="external">think2011/LocalResizeIMG</a><br><a href="http://a3147972.blog.51cto.com/2366547/1554698" target="_blank" rel="external">移动端图片上传方法【更好的兼容安卓IOS和微信】</a><br><a href="http://my.oschina.net/hzplay/blog/160806" target="_blank" rel="external">HTML5+Canvas手机拍摄，本地压缩上传图片，案例实测报告</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>关于H5图片上传一直是一个非常蛋痛的问题, 以至于现在都没有找到一个非常好的解决方案, 去年的年初尝试<a href="https://github.com/gokercebeci/canvasResize">gokercebeci/canvasResize</a>这个方案勉强解决了这个问题, 但是并不算是十分理想, iOS上仍然是拍照后会莫名旋转, 曾经在GitHub上看到有位大神谢了一个库是专门处理这个问题的, 自己试了下貌似并不行, 也不知道现在是个什么情况了, 有空再去看下(但愿会有空吧), 这里提供一个Jquery版本的图片压缩上传的方案. </p>]]>
    
    </summary>
    
      <category term="HTML5" scheme="http://huyaohui.com/tags/HTML5/"/>
    
      <category term="Web" scheme="http://huyaohui.com/tags/Web/"/>
    
      <category term="HTML5" scheme="http://huyaohui.com/categories/HTML5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Cordova plugins explain]]></title>
    <link href="http://huyaohui.com/2015/11/14/Cordova-plugins-explain/"/>
    <id>http://huyaohui.com/2015/11/14/Cordova-plugins-explain/</id>
    <published>2015-11-14T14:56:31.000Z</published>
    <updated>2016-01-03T02:58:28.000Z</updated>
    <content type="html"><![CDATA[<p>Cordova插件为我们提供了一个本地化的API, 供javascript调用, 能使我们很方便的使用javascript使用NativeApp的一些特性. 这里主要是记录一些比较常用切比较调用比较简单插件, 比较复杂的会另起篇幅进行说明. </p>
<a id="more"></a>
<h2 id="各种loading(菊花)">各种loading(菊花)</h2><p><a href="https://github.com/pbernasconi/cordova-progressIndicator" target="_blank" rel="external">pbernasconi/cordova-progressIndicator</a></p>
<p>详细文档: <a href="http://paolobernasconi.com/cordova-progressIndicator/" target="_blank" rel="external">http://paolobernasconi.com/cordova-progressIndicator/</a></p>
<p>Install:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add org.pbernasconi.progressindicator</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">phonegap <span class="built_in">local</span> plugin add org.pbernasconi.progressindicator</span><br></pre></td></tr></table></figure></p>
<p>Use:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ProgressIndicator.showSimple(<span class="literal">true</span>);</span><br><span class="line">ProgressIndicator.showSimpleWithLabel(<span class="literal">false</span>, <span class="string">'Loading...'</span>);</span><br><span class="line">ProgressIndicator.showSimpleWithLabelDetail(<span class="literal">false</span>, <span class="string">'Loading...'</span>, <span class="string">'Refreshing list'</span>);</span><br></pre></td></tr></table></figure></p>
<h2 id="crosswalk引擎">crosswalk引擎</h2><p><a href="https://crosswalk-project.org" target="_blank" rel="external">crosswalk</a></p>
<p>webview引擎, 主要给安卓4.0~4.3提供一个统一的webview运行环境</p>
<p>Install<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add cordova-plugin-crosswalk-webview</span><br></pre></td></tr></table></figure></p>
<p>Use:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cordova build android</span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line">/path/to/hello/platforms/android/build/outputs/apk/android-x86-debug.apk</span><br><span class="line">/path/to/hello/platforms/android/build/outputs/apk/android-armv7-debug.apk</span><br></pre></td></tr></table></figure></p>
<h2 id="控制台显示console-log">控制台显示console.log</h2><p><a href="https://github.com/apache/cordova-plugin-console" target="_blank" rel="external">apache/cordova-plugin-console</a><br>没有安装此插件是无法输出javascript控制台日志的, 仅用于调试使用, 一般发布都会删除此插件</p>
<p>Install:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add cordova-plugin-console</span><br></pre></td></tr></table></figure></p>
<p>Use:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"deviceready"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"console.log works well"</span>);</span><br><span class="line">    <span class="built_in">console</span>.error</span><br><span class="line">    <span class="built_in">console</span>.exception</span><br><span class="line">    <span class="built_in">console</span>.warn</span><br><span class="line">    <span class="built_in">console</span>.info</span><br><span class="line">    <span class="built_in">console</span>.debug</span><br><span class="line">    <span class="built_in">console</span>.assert</span><br><span class="line">    <span class="built_in">console</span>.dir</span><br><span class="line">    <span class="built_in">console</span>.dirxml</span><br><span class="line">    <span class="built_in">console</span>.time</span><br><span class="line">    <span class="built_in">console</span>.timeEnd</span><br><span class="line">    <span class="built_in">console</span>.table</span><br><span class="line">    <span class="comment">// Partially supported Methods</span></span><br><span class="line">    <span class="built_in">console</span>.group</span><br><span class="line">    <span class="built_in">console</span>.groupCollapsed</span><br><span class="line">    <span class="comment">// Not supported Methods</span></span><br><span class="line">    <span class="built_in">console</span>.clear</span><br><span class="line">    <span class="built_in">console</span>.trace</span><br><span class="line">    <span class="built_in">console</span>.groupEnd</span><br><span class="line">    <span class="built_in">console</span>.timeStamp</span><br><span class="line">    <span class="built_in">console</span>.profile</span><br><span class="line">    <span class="built_in">console</span>.profileEnd</span><br><span class="line">    <span class="built_in">console</span>.count</span><br><span class="line">&#125;, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure></p>
<h2 id="图片多选">图片多选</h2><p><a href="https://github.com/wymsee/cordova-imagePicker" target="_blank" rel="external">wymsee/cordova-imagePicker</a></p>
<p>Install:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">phonegap plugin add https://github.com/wymsee/cordova-imagePicker.git</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">cordova plugin add https://github.com/wymsee/cordova-imagePicker.git</span><br></pre></td></tr></table></figure></p>
<p>Use:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.imagePicker.getPictures(</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params">results</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// success</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; results.length; i++) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'Image URI: '</span> + results[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// error</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Error: '</span> + error);</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="comment">// options</span></span><br><span class="line">        maximumImagesCount: <span class="number">10</span>,</span><br><span class="line">        width: <span class="number">800</span></span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p>
<h2 id="微信分享">微信分享</h2><p><a href="https://github.com/xu-li/cordova-plugin-wechat" target="_blank" rel="external">xu-li/cordova-plugin-wechat</a></p>
<p>Use:<br><a href="/2015/11/12/Cordova-微信分享插件使用详记/">Cordova 微信分享插件使用详记</a></p>
<h2 id="base64编码">base64编码</h2><p><a href="https://github.com/hazemhagrass/phonegap-base64" target="_blank" rel="external">hazemhagrass/phonegap-base64</a><br>warning: 依赖<a href="https://github.com/apache/cordova-plugin-device" target="_blank" rel="external">apache/cordova-plugin-device</a></p>
<p>Install:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">phonegap <span class="built_in">local</span> plugin add org.apache.cordova.device</span><br><span class="line">phonegap <span class="built_in">local</span> plugin add https://github.com/hazemhagrass/phonegap-base64.git</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">cordova plugin add org.apache.cordova.device</span><br><span class="line">cordova plugin add https://github.com/hazemhagrass/phonegap-base64.git</span><br></pre></td></tr></table></figure></p>
<p>Use:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'deviceready'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.plugins.Base64.encodeFile(filePath, <span class="function"><span class="keyword">function</span>(<span class="params">base64</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'file base64 encoding: '</span> + base64);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h2 id="二维码扫描">二维码扫描</h2><p><a href="https://github.com/wildabeast/BarcodeScanner" target="_blank" rel="external">wildabeast/BarcodeScanner</a></p>
<h2 id="照相机">照相机</h2><p><a href="https://github.com/apache/cordova-plugin-camera" target="_blank" rel="external">cordova-plugin-camera</a></p>
<p>Install:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add cordova-plugin-camera</span><br></pre></td></tr></table></figure></p>
<p>Use:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'deviceready'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    navigator.camera.getPicture(<span class="function"><span class="keyword">function</span> (<span class="params">imageURI</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// success</span></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'myImage'</span>).src = imageURI;</span><br><span class="line">    &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">message</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// error</span></span><br><span class="line">        alert(<span class="string">'Failed because: '</span> + message);</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="comment">// options</span></span><br><span class="line">        quality: <span class="number">50</span>,</span><br><span class="line">        destinationType: Camera.DestinationType.FILE_URI</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure></p>
<h2 id="修改图片尺寸">修改图片尺寸</h2><p><a href="https://github.com/protonet/cordova-plugin-image-resizer" target="_blank" rel="external">protonet/cordova-plugin-image-resizer</a></p>
<p>Install:<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add https://github.com/protonet/cordova-plugin-image-resizer.git</span><br></pre></td></tr></table></figure></p>
<p>Use:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.ImageResizer.resize(&#123;</span><br><span class="line">        uri: imageUrl,</span><br><span class="line">        folderName: <span class="string">"Protonet Messenger"</span>,</span><br><span class="line">        quality: <span class="number">90</span>,</span><br><span class="line">        width: <span class="number">120</span>,</span><br><span class="line">        height: <span class="number">120</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params">image</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'myImage'</span>).src = image;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// failed: grumpy cat likes this function</span></span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Cordova插件为我们提供了一个本地化的API, 供javascript调用, 能使我们很方便的使用javascript使用NativeApp的一些特性. 这里主要是记录一些比较常用切比较调用比较简单插件, 比较复杂的会另起篇幅进行说明. </p>]]>
    
    </summary>
    
      <category term="Cordova" scheme="http://huyaohui.com/tags/Cordova/"/>
    
      <category term="HTML5" scheme="http://huyaohui.com/tags/HTML5/"/>
    
      <category term="HybridApp" scheme="http://huyaohui.com/tags/HybridApp/"/>
    
      <category term="HTML5" scheme="http://huyaohui.com/categories/HTML5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Web 前端开发技术资料集锦]]></title>
    <link href="http://huyaohui.com/2015/11/13/Web-%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E8%B5%84%E6%96%99%E9%9B%86%E9%94%A6/"/>
    <id>http://huyaohui.com/2015/11/13/Web-前端开发技术资料集锦/</id>
    <published>2015-11-13T09:17:40.000Z</published>
    <updated>2016-01-03T03:11:00.000Z</updated>
    <content type="html"><![CDATA[<p>最近又开始从事 web 方面的工作了, 正好花点时间把以前学习过的资料总结下, 以便以后查阅, 同时也共大家学习参考. 顺便一提这只是一个技术参考而已, 并不是什么学习指南, 切记..<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2gXdbhpXXXXc8XXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
<a id="more"></a>
<h2 id="Prototype-js">Prototype.js</h2><p>Prototype是由Sam Stephenson所开发的JavaScript函式库。它提供了完整的Ajax框架及其它的工具。它的实作完全包含在一个单一的prototype.js档案中。被应用于Ruby on Rails、script.aculo.us和Rico等。<a href="https://en.wikipedia.org/wiki/Prototype_JavaScript_Framework" target="_blank" rel="external">—&gt;wikipedia</a></p>
<ol>
<li><p>Website<br><a href="http://prototypejs.org/" target="_blank" rel="external">http://prototypejs.org/</a></p>
</li>
<li><p>GitHub<br><a href="https://github.com/sstephenson/prototype/" target="_blank" rel="external">sstephenson/prototype/</a></p>
</li>
</ol>
<h2 id="jQuery">jQuery</h2><p>jQuery是一套跨浏览器的JavaScript库，简化HTML与JavaScript之间的操作。由约翰·雷西格（John Resig）在2006年1月的BarCamp NYC上发布第一个版本。目前是由Dave Methvin领导的开发团队进行开发。全球前10,000个访问最高的网站中，有65%使用了jQuery，是目前最受欢迎的JavaScript库。<a href="https://zh.wikipedia.org/wiki/JQuery" target="_blank" rel="external">—&gt;wikipedia</a></p>
<ol>
<li><p>Website<br><a href="http://jquery.com/" target="_blank" rel="external">http://jquery.com/</a></p>
</li>
<li><p>GitHub<br><a href="https://github.com/jquery/jquery" target="_blank" rel="external">jquery/jquery</a></p>
</li>
</ol>
<h2 id="AngularJS">AngularJS</h2><p>AngularJS是一款开源JavaScript库，由Google维护，用来协助单一页面应用程序运行的。它的目标是通过MVC模式（MVC）功能增强基于浏览器的应用，使开发和测试变得更加容易。</p>
<p>库读取包含附加自定义（标签属性）的HTML，遵从这些自定义属性中的指令，并将页面中的输入或输出与由JavaScript变量表示的模型绑定起来。这些JavaScript变量的值可以手工设置，或者从静态或动态JSON资源中获取。<a href="https://zh.wikipedia.org/wiki/AngularJS" target="_blank" rel="external">—&gt;wikipedia</a></p>
<ol>
<li><p>Website<br><a href="https://angularjs.org/" target="_blank" rel="external">https://angularjs.org/</a></p>
</li>
<li><p>GitHub<br><a href="https://github.com/angular/angular.js" target="_blank" rel="external">angular/angular.js</a></p>
</li>
</ol>
<h2 id="RequireJS">RequireJS</h2><p>最早的时候，所有Javascript代码都写在一个文件里面，只要加载这一个文件就够了。后来，代码越来越多，一个文件不够了，必须分成多个文件，依次加载。<br>这样的写法有很大的缺点。首先，加载的时候，浏览器会停止网页渲染，加载文件越多，网页失去响应的时间就会越长；其次，由于js文件之间存在依赖关系，因此必须严格保证加载顺序（比如上例的1.js要在2.js的前面），依赖性最大的模块一定要放到最后加载，当依赖关系很复杂的时候，代码的编写和维护都会变得困难。<br>require.js的诞生，就是为了解决这两个问题<br>—&gt;<br><a href="http://www.ruanyifeng.com/blog/2012/10/javascript_module.html" target="_blank" rel="external">Javascript模块化编程（一）：模块的写法</a><br><a href="http://www.ruanyifeng.com/blog/2012/10/asynchronous_module_definition.html" target="_blank" rel="external">Javascript模块化编程（二）：AMD规范</a><br><a href="http://www.ruanyifeng.com/blog/2012/11/require_js.html" target="_blank" rel="external">Javascript模块化编程（三）：require.js的用法</a></p>
<ol>
<li><p>Website<br><a href="http://requirejs.org/" target="_blank" rel="external">requirejs_EN</a><br><a href="http://www.requirejs.cn/" target="_blank" rel="external">requirejs_CN</a></p>
</li>
<li><p>GitHub<br><a href="https://github.com/jrburke/requirejs" target="_blank" rel="external">jrburke/requirejs</a></p>
</li>
</ol>
<h2 id="Handlebars-js">Handlebars.js</h2><p>Handlebars 是 JavaScript 一个语义模板库，通过对view和data的分离来快速构建Web模板。它采用”Logic-less template”（无逻辑模版）的思路，在加载时被预编译，而不是到了客户端执行到代码时再去编译， 这样可以保证模板加载和运行的速度。Handlebars兼容Mustache，你可以在Handlebars中导入Mustache模板。<a href="http://www.ghostchina.com/introducing-the-handlebars-js-templating-engine/" target="_blank" rel="external">—&gt;Handlebars.js 模板引擎</a></p>
<ol>
<li><p>Website<br><a href="http://handlebarsjs.com/" target="_blank" rel="external">http://handlebarsjs.com/</a></p>
</li>
<li><p>GitHub<br><a href="https://github.com/nodejs/node" target="_blank" rel="external">nodejs/node</a></p>
</li>
</ol>
<h2 id="Underscore-js">Underscore.js</h2><p>Underscore 是一个 JavaScript 工具库，它提供了一整套函数式编程的实用功能，但是没有扩展任何 JavaScript 内置对象。 他解决了这个问题：“如果我面对一个空白的 HTML 页面，并希望立即开始工作，我需要什么？” 他弥补了 jQuery 没有实现的功能，同时又是 Backbone 必不可少的部分。</p>
<p>Underscore 提供了100多个函数，包括常用的：map、filter、invoke — 当然还有更多专业的辅助函数，如：函数绑定、JavaScript 模板功能、创建快速索引、强类型相等测试等等。<a href="http://www.css88.com/doc/underscore/" target="_blank" rel="external">—&gt;css88.com</a></p>
<ol>
<li><p>Website<br><a href="http://underscorejs.org/" target="_blank" rel="external">http://underscorejs.org/</a></p>
</li>
<li><p>GitHub<br><a href="https://github.com/jashkenas/underscore" target="_blank" rel="external">jashkenas/underscore</a></p>
</li>
</ol>
<h2 id="Font-Awesome">Font-Awesome</h2><p>Font Awesome为您提供可缩放的矢量图标，您可以使用CSS所提供的所有特性对它们进行更改，包括：大小、颜色、阴影或者其它任何支持的效果。<br>其实在 Bootstrap 中的字体图标使用的就是这套, 之所以要单独拿出来说, 只是感觉比较重要. 哈哈..</p>
<ol>
<li><p>Website<br><a href="https://fortawesome.github.io/Font-Awesome/icons/" target="_blank" rel="external">Font-Awesome_EN</a><br><a href="http://fontawesome.dashgame.com/" target="_blank" rel="external">Font-Awesome_CN</a></p>
</li>
<li><p>GitHub<br><a href="https://github.com/FortAwesome/Font-Awesome/" target="_blank" rel="external">FortAwesome/Font-Awesome</a></p>
</li>
</ol>
<h2 id="Node-js">Node.js</h2><p>Node.js是一个开放源代码、跨平台的、可用于服务器端和网络应用的运行环境。Node.js应用JavaScript语言写成，在Node.js运行时运行。它支持OS X、Microsoft Windows、Linux、FreeBSD、NonStop、IBM AIX、IBM System z和IBM i。Node.js由Node.js基金会拥有和维护，该基金会与Linux基金会有合作关系。<a href="https://zh.wikipedia.org/wiki/Node.js" target="_blank" rel="external">—&gt;wikipedia</a></p>
<ol>
<li><p>Website<br><a href="https://nodejs.org/" target="_blank" rel="external">https://nodejs.org/</a></p>
</li>
<li><p>GitHub<br><a href="https://github.com/nodejs/node" target="_blank" rel="external">nodejs/node</a></p>
</li>
</ol>
<h2 id="Grunt-js">Grunt.js</h2><p>GruntJS 是基于JavaScript的命令行构建工具，它可以帮助开发者们自动化重复性的工作。你可以把它看成是JavaScript下的Make或者Ant。它可以完成诸如精简、编译、单元测试、lint检查等工作。由于越来越多的开发移到了客户端，帮助开发者更高效地工作的工具就更有用了。</p>
<ol>
<li><p>Website<br><a href="http://gruntjs.com/" target="_blank" rel="external">gruntjs_EN</a><br><a href="http://www.gruntjs.net/" target="_blank" rel="external">gruntjs_CN</a></p>
</li>
<li><p>GitHub<br><a href="https://github.com/gruntjs/grunt" target="_blank" rel="external">gruntjs/grunt</a></p>
</li>
</ol>
<h2 id="Gulp-js">Gulp.js</h2><p>gulp 是基于 Nodejs 的自动任务运行器，能自动化地完成javascript/coffee/sass/less/html/image/css等文件的的测试、检查、合并、压缩、格式化、浏览器自动刷新、部署文件生成，并监听文件在改动后重复指定的这些步骤。在实现上，gulp 借鉴了Unix操作系统的管道（pipe）思想，前一级的输出，直接变成后一级的输入，使得在操作上非常简单.<a href="http://segmentfault.com/a/1190000003041055" target="_blank" rel="external">—&gt;segmentfault</a></p>
<ol>
<li><p>Website<br><a href="http://gulpjs.com/" target="_blank" rel="external">gulpjs_EN</a><br><a href="http://www.gulpjs.com.cn/" target="_blank" rel="external">gulpjs_CN</a></p>
</li>
<li><p>GitHub<br><a href="https://github.com/gulpjs/gulp" target="_blank" rel="external">gulpjs/gulp</a></p>
</li>
</ol>
<h2 id="Sass">Sass</h2><p>Sass（英文全称：Syntactically Awesome Stylesheets）是一个最初由Hampton Catlin设计并由Natalie Weizenbaum开发的层叠样式表语言。[1][2]在开发最初版本之后，Weizenbaum和Chris Eppstein继续通过SassScript来继续扩充Sass的功能。SassScript是一个在Sass文件中使用的小型脚本语言。<a href="http://t.cn/RUHj05g" target="_blank" rel="external">—&gt;wikipedia</a></p>
<ol>
<li>Website<br><a href="http://sass-lang.com/" target="_blank" rel="external">Sass_EN</a><br><a href="http://sass.bootcss.com/" target="_blank" rel="external">Sass_CN</a></li>
</ol>
<ol>
<li>GitHub<br><a href="https://github.com/gulpjs/gulp" target="_blank" rel="external">gulpjs/gulp</a></li>
</ol>
<h2 id="Less">Less</h2><p>LESS是一种由Alexis Sellier设计的动态层叠样式表语言，受Sass所影响，同时也影响了Sass的新语法：SCSS。[1]</p>
<p>LESS是开源的，其第一个版本由Ruby写成，但在后续的版本当中，Ruby逐渐被替换为JavaScript。受益于JavaScript，LESS可以在客户端上运行（IE6+、Webkit、Firefox），也可以在服务端运行（Node.js、Rhino）。[2]</p>
<p>在语法方面，LESS与CSS较为接近，一个合法的CSS代码段本身也是一段合法的LESS代码段。LESS提供变量、嵌套、混合、操作符、函数等一般编程所需的抽象机制。[2]<a href="http://t.cn/RUHj9ow" target="_blank" rel="external">—&gt;wikipedia</a></p>
<ol>
<li><p>Website<br><a href="http://lesscss.org/" target="_blank" rel="external">Less_EN</a><br><a href="http://less.bootcss.com/" target="_blank" rel="external">Less_CN</a></p>
</li>
<li><p>GitHub<br><a href="https://github.com/less/less.js" target="_blank" rel="external">less/less.js</a></p>
</li>
</ol>
<h2 id="Jade">Jade</h2><p>Jade 是一个高性能的模板引擎，它深受 Haml 影响，它是用 JavaScript 实现的，并且可以供 Node 使用。</p>
<ol>
<li><p>Website<br><a href="http://jade-lang.com/" target="_blank" rel="external">Jade_EN</a><br><a href="http://segmentfault.com/a/1190000000357534" target="_blank" rel="external">Jade_CN</a></p>
</li>
<li><p>GitHub<br><a href="https://github.com/jadejs/jade" target="_blank" rel="external">jadejs/jade</a></p>
</li>
</ol>
<h2 id="Bootstrap">Bootstrap</h2><p>Bootstrap是一组用于网站和网络应用程序的工具。Bootstrap是自由软件，包括HTML、层叠样式表（CSS）及JavaScript的框架，提供字体排印、窗体、按钮、导航及其他各种组件，并提供了Javascript扩展，旨在使动态网页和Web应用的开发更加容易。<a href="https://zh.wikipedia.org/wiki/Bootstrap" target="_blank" rel="external">—&gt;wikipedia</a></p>
<ol>
<li><p>Website<br><a href="http://getbootstrap.com/" target="_blank" rel="external">Bootstrap_EN</a><br><a href="http://www.bootcss.com/" target="_blank" rel="external">Bootstrap_CN</a></p>
</li>
<li><p>GitHub<br><a href="https://github.com/twbs/bootstrap" target="_blank" rel="external">twbs/bootstrap</a></p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近又开始从事 web 方面的工作了, 正好花点时间把以前学习过的资料总结下, 以便以后查阅, 同时也共大家学习参考. 顺便一提这只是一个技术参考而已, 并不是什么学习指南, 切记..<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2gXdbhpXXXXc8XXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>]]>
    
    </summary>
    
      <category term="HTML5" scheme="http://huyaohui.com/tags/HTML5/"/>
    
      <category term="Note" scheme="http://huyaohui.com/tags/Note/"/>
    
      <category term="Web" scheme="http://huyaohui.com/tags/Web/"/>
    
      <category term="HTML5" scheme="http://huyaohui.com/categories/HTML5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HTML 如何设置Iframe自适应高度]]></title>
    <link href="http://huyaohui.com/2015/11/13/HTML-%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AEIframe%E8%87%AA%E9%80%82%E5%BA%94%E9%AB%98%E5%BA%A6/"/>
    <id>http://huyaohui.com/2015/11/13/HTML-如何设置Iframe自适应高度/</id>
    <published>2015-11-13T07:48:24.000Z</published>
    <updated>2016-01-03T02:59:06.000Z</updated>
    <content type="html"><![CDATA[<p>不带边框的iframe因为能和网页无缝的结合从而不刷新页面的情况下更新页面的部分数据成为可能，可是 iframe的大小却不像层那样可以“伸缩自如”，所以带来了使用上的麻烦，给iframe设置高度的时候多了也不好，少了更是不行，现在，让我来告诉大 家一种iframe动态调整高度的方法</p>
<a id="more"></a>
<h2 id="方案一">方案一</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SetWinHeight</span>(<span class="params">obj</span>)　　 </span>&#123;　　</span><br><span class="line">    <span class="keyword">var</span> win = obj;　　</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById)　　 &#123;　　</span><br><span class="line">        <span class="keyword">if</span> (win &amp;&amp; !<span class="built_in">window</span>.opera)　　 &#123;　　</span><br><span class="line">            <span class="keyword">if</span> (win.contentDocument &amp;&amp; win.contentDocument.body.offsetHeight) &#123;</span><br><span class="line">                win.height = win.contentDocument.body.offsetHeight;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (win.Document &amp;&amp; win.Document.body.scrollHeight) &#123;</span><br><span class="line">                win.height = win.Document.body.scrollHeight;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;　　</span><br><span class="line">    &#125;　　</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最后，加入iframe,不能丢掉onload属性，当然了，id也必须也函数中的win匹配；</p>
<h2 id="方案二">方案二</h2><p>我们看看另一种情况的iframe解决方案<br>重要提示：src=中你必须填写的网页地址，一定要和本页面在同一个站点上，否则，会抱错，说“拒绝访问!”(实际上这是因为Js的跨域问题导致拒绝访问的)现在给大家分享一下：</p>
<ol>
<li><p>建立一个bottom.js的文件，然后输入下面的代码；</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">parent.document.all(<span class="string">"框架ID名"</span>).style.height=<span class="built_in">document</span>.body.scrollHeight;</span><br><span class="line">parent.document.all(<span class="string">"框架ID名"</span>).style.width=<span class="built_in">document</span>.body.scrollWidth；</span><br></pre></td></tr></table></figure>
</li>
<li><p>给你网站里所有的被包含文件里面每个都加入，在WINXP、IE6下面测试通过；<br>实现 iframe 的自适应高度，能够随着页面的长度自动的适应以免除页面和 iframe 同时出现滚动条的现象；</p>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//** iframe自动适应页面 **//</span></span><br><span class="line"><span class="comment">//输入你希望根据页面高度自动调整高度的iframe的名称的列表</span></span><br><span class="line"><span class="comment">//用逗号把每个iframe的ID分隔. 例如: ["myframe1", "myframe2"]，可以只有一个窗体，则不用逗号。</span></span><br><span class="line"><span class="comment">//定义iframe的ID</span></span><br><span class="line"><span class="keyword">var</span> iframeids = [<span class="string">"test"</span>]</span><br><span class="line">    <span class="comment">//如果用户的浏览器不支持iframe是否将iframe隐藏 yes 表示隐藏，no表示不隐藏</span></span><br><span class="line"><span class="keyword">var</span> iframehide = <span class="string">"yes"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dyniframesize</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> dyniframe = <span class="keyword">new</span> <span class="built_in">Array</span>()</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; iframeids.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById) &#123;</span><br><span class="line">            <span class="comment">//自动调整iframe高度</span></span><br><span class="line">            dyniframe[dyniframe.length] = <span class="built_in">document</span>.getElementById(iframeids);</span><br><span class="line">            <span class="keyword">if</span> (dyniframe &amp;&amp; !<span class="built_in">window</span>.opera) &#123;</span><br><span class="line">                dyniframe.style.display = <span class="string">"block"</span></span><br><span class="line">                <span class="keyword">if</span> (dyniframe.contentDocument &amp;&amp; dyniframe.contentDocument.body.offsetHeight) <span class="comment">//如果用户的浏览器是NetScape</span></span><br><span class="line">                    dyniframe.height = dyniframe.contentDocument.body.offsetHeight;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (dyniframe.Document &amp;&amp; dyniframe.Document.body.scrollHeight) <span class="comment">//如果用户的浏览器是IE</span></span><br><span class="line">                    dyniframe.height = dyniframe.Document.body.scrollHeight;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//根据设定的参数来处理不支持iframe的浏览器的显示问题</span></span><br><span class="line">        <span class="keyword">if</span> ((<span class="built_in">document</span>.all || <span class="built_in">document</span>.getElementById) &amp;&amp; iframehide == <span class="string">"no"</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> tempobj = <span class="built_in">document</span>.all ? <span class="built_in">document</span>.all[iframeids] : <span class="built_in">document</span>.getElementById(iframeids)</span><br><span class="line">            tempobj.style.display = <span class="string">"block"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.addEventListener)</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">"load"</span>, dyniframesize, <span class="literal">false</span>)</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.attachEvent)</span><br><span class="line">    <span class="built_in">window</span>.attachEvent(<span class="string">"onload"</span>, dyniframesize)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">window</span>.onload = dyniframesize</span><br></pre></td></tr></table></figure>
<h2 id="参考资料">参考资料</h2><p><a href="http://www.html5cn.org/article-7272-1.html" target="_blank" rel="external">HTML教程：如何设置Iframe自适应高度</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>不带边框的iframe因为能和网页无缝的结合从而不刷新页面的情况下更新页面的部分数据成为可能，可是 iframe的大小却不像层那样可以“伸缩自如”，所以带来了使用上的麻烦，给iframe设置高度的时候多了也不好，少了更是不行，现在，让我来告诉大 家一种iframe动态调整高度的方法</p>]]>
    
    </summary>
    
      <category term="HTML5" scheme="http://huyaohui.com/tags/HTML5/"/>
    
      <category term="Web" scheme="http://huyaohui.com/tags/Web/"/>
    
      <category term="HTML5" scheme="http://huyaohui.com/categories/HTML5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Webapp development html5 meta 常用属性说明]]></title>
    <link href="http://huyaohui.com/2015/11/13/WebApp-development-html-meta-%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7%E8%AF%B4%E6%98%8E/"/>
    <id>http://huyaohui.com/2015/11/13/WebApp-development-html-meta-常用属性说明/</id>
    <published>2015-11-13T07:48:24.000Z</published>
    <updated>2016-01-03T03:11:10.000Z</updated>
    <content type="html"><![CDATA[<p>在开发html5app的时候, 会经常遇到的一个问题, 比如莫名其妙的电话号码变成了红色的, 但是自己并没有设置过, 是不是很苦恼, 现在就来解决写个困扰.</p>
<a id="more"></a>
<h2 id="viewport">viewport</h2><p><code>viewport</code> 也就是可视区域, 对于桌面浏览器, 我们都很清楚viewport是什么, 就是出去了所有工具栏、状态栏、滚动条等等之后用于看网页的区域,<br>这是真正有效的区域. 由于移动设备屏幕宽度不同于传统web, 因此我们需要改变viewport.</p>
<p>一、参数说明</p>
<ol>
<li>width            // viewport 的宽度 （范围从200 到10,000，默认为980 像素）</li>
<li>height           // viewport 的高度 （范围从223 到10,000）</li>
<li>initial-scale    // 初始的缩放比例 （范围从&gt;0到10）</li>
<li>minimum-scale    // 允许用户缩放到的最小比例</li>
<li>maximum-scale    // 允许用户缩放到的最大比例</li>
<li>user-scalable    // 用户是否可以手动缩 (no, yes)</li>
</ol>
<p>二、示例<br>实际会用到的就是个参数</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">meta</span> <span class="attribute">id</span>=<span class="value">"viewport"</span> <span class="attribute">name</span>=<span class="value">"viewport"</span> <span class="attribute">content</span>=<span class="value">"width=320; initial-scale=1.0;maximum-scale=1.0; user-scalable=no;"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="文件编码">文件编码</h2><p>用于设置文本编码的, 很多乱码问题都是这个导致. 需要把你的文本编码和你</p>
<p>一、参数说明</p>
<ol>
<li>text/html    // 文本类型</li>
<li>charset      // 文本编码</li>
</ol>
<p>二、示例<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">meta</span> <span class="attribute">http-equiv</span>=<span class="value">"Content-Type"</span> <span class="attribute">content</span>=<span class="value">"text/html; charset=utf-8"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="顶端的状态条的样式">顶端的状态条的样式</h2><p>系统状态栏是 iOS 顶部显示运营商、WIFI、时间的部分的颜色<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">meta</span> <span class="attribute">name</span>=<span class="value">"apple-mobile-web-app-status-bar-style"</span> <span class="attribute">content</span>=<span class="value">"black"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="隐藏状态栏">隐藏状态栏</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">meta</span> <span class="attribute">name</span>=<span class="value">"apple-mobile-web-app-capable"</span> <span class="attribute">content</span>=<span class="value">"yes"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="忽略电话号码">忽略电话号码</h2><p>告诉设备忽略将页面中的数字识别为电话号码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">meta</span> <span class="attribute">content</span>=<span class="value">"telephone=no"</span> <span class="attribute">name</span>=<span class="value">"format-detection"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="参考资料">参考资料</h2><p><a href="http://www.cnblogs.com/pifoo/archive/2011/05/28/webkit-webapp.html" target="_blank" rel="external">webkit webApp 开发技术要点总结</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在开发html5app的时候, 会经常遇到的一个问题, 比如莫名其妙的电话号码变成了红色的, 但是自己并没有设置过, 是不是很苦恼, 现在就来解决写个困扰.</p>]]>
    
    </summary>
    
      <category term="HTML5" scheme="http://huyaohui.com/tags/HTML5/"/>
    
      <category term="Web" scheme="http://huyaohui.com/tags/Web/"/>
    
      <category term="WebApp" scheme="http://huyaohui.com/tags/WebApp/"/>
    
      <category term="HTML5" scheme="http://huyaohui.com/categories/HTML5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Cordova 微信分享插件使用详记]]></title>
    <link href="http://huyaohui.com/2015/11/12/Cordova-%E5%BE%AE%E4%BF%A1%E5%88%86%E4%BA%AB%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%AE%B0/"/>
    <id>http://huyaohui.com/2015/11/12/Cordova-微信分享插件使用详记/</id>
    <published>2015-11-12T09:08:32.000Z</published>
    <updated>2016-01-03T02:58:35.000Z</updated>
    <content type="html"><![CDATA[<p>自从前年接触混合开发以来就非常看好 Cordova, 唯一遇到的比较大的问题就是本地化的无法解决, 直到今天公司重新启动关于混合app的开发和应用, 不可避免的有要重拾这些问题, 刚开始本来选择一些国内的集成平台, 开发到中期果断放弃, 原因只能呵呵了.. 本抱着如果一个星期不能解决分享的问题就滚回去写原生的, 没想到在我之前已经有大大封装好了分享库, 免去了自己写的风险, 这里万分感谢.</p>
<a id="more"></a>
<h2 id="获取微信APP_ID">获取微信APP ID</h2><ol>
<li><p>到微信公众平台注册一个开发者账号 <a href="https://open.weixin.qq.com/" target="_blank" rel="external">https://open.weixin.qq.com/</a> </p>
</li>
<li><p>管理中心</p>
</li>
<li><p>创建移动应用</p>
</li>
<li><p>填写基本信息, 下一步</p>
</li>
<li><p>选择需要支持的平台, 填写资料(Ps: 审核完了后是可以修改的)<br>iOS:<br>Bundle ID: [包名]<br>Android:<br>应用签名: [下面会详细说明如何获取]<br>应用包名: [包名]</p>
</li>
<li><p>确认提交审核</p>
</li>
</ol>
<h2 id="安装说明">安装说明</h2><p>插件地址: <a href="https://github.com/xu-li/cordova-plugin-wechat" target="_blank" rel="external">xu-li/cordova-plugin-wechat</a></p>
<h3 id="安装">安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cordova create <span class="built_in">test</span> com.huyaohui.test <span class="built_in">test</span></span><br><span class="line">cordova plugin add https://github.com/xu-li/cordova-plugin-wechat --variable wechatappid=[微信应用id]</span><br><span class="line">cordova platform add ios android</span><br><span class="line">cordova build ios android</span><br></pre></td></tr></table></figure>
<p>Ps: 需要注意的是需要先安装插件在添加平台, 要不然插件不会被<code>build</code>到平台中去.</p>
<h3 id="使用说明">使用说明</h3><p>详细说明: <a href="https://github.com/xu-li/cordova-plugin-wechat-example/blob/master/ionic/www/js/share.js" target="_blank" rel="external">xu-li/cordova-plugin-wechat-example</a></p>
<p>简单使用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否安装微信</span></span><br><span class="line">Wechat.isInstalled(<span class="function"><span class="keyword">function</span> (<span class="params">installed</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Wechat installed: "</span> + (installed ? <span class="string">"Yes"</span> : <span class="string">"No"</span>));</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">reason</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Failed: "</span> + reason);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简单分享文字</span></span><br><span class="line">Wechat.share(&#123;</span><br><span class="line">    text: <span class="string">"This is just a plain string"</span>,</span><br><span class="line">    scene: Wechat.Scene.TIMELINE   <span class="comment">// share to Timeline</span></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Success"</span>);</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">reason</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Failed: "</span> + reason);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h2 id="iOS_分享">iOS 分享</h2><p>iOS 分享一般在安装插件的时候把<code>APP ID</code>填写好就没问题了, 就不多说了. 重点说下安卓</p>
<h2 id="Android_分享">Android 分享</h2><p>因为 Android 的开放性, 可能是出于安全考虑, 微信 SDK 除了核对应用包名外, 还会核对应用签名, 所以调试 Android 时, 需要保证应用签名与提交审核的签名一致.</p>
<p>首先, 应用务必要通过审核. 至于审核后修改签名是否立即生效, 我没有做验证.</p>
<p>获得最终可用的应用签名的前提是, 应用是以自己的生成的 keystore 签名的, 所以第一个问题应该是, 如何生成自己的 keystore.</p>
<p>JDK 有一个叫 <code>keytool</code> 的工具可以做这个, 一般情况下既然 Cordova 能正常用, 默认 JDK 已经加入 PATH 了, 那么可以直接运行下面的命令.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># input: </span></span><br><span class="line">keytool -genkey -alias [别名] -keyalg RSA -validity <span class="number">20000</span> -keystore [文件名.keystore]</span><br><span class="line"></span><br><span class="line"><span class="comment"># output: </span></span><br><span class="line"><span class="comment"># 安装提示输入就行了</span></span><br><span class="line">Enter keystore password:</span><br><span class="line">Re-enter new password:</span><br><span class="line">What is your first and last name?</span><br><span class="line">  [Unknown]:  make</span><br><span class="line">What is the name of your organizational unit?</span><br><span class="line">  [Unknown]:  chenjin</span><br><span class="line">What is the name of your organization?</span><br><span class="line">  [Unknown]:  chenjin</span><br><span class="line">What is the name of your City or Locality?</span><br><span class="line">  [Unknown]:  nanchang</span><br><span class="line">What is the name of your State or Province?</span><br><span class="line">  [Unknown]:  jiangxi</span><br><span class="line">What is the two-letter country code <span class="keyword">for</span> this unit?</span><br><span class="line">  [Unknown]:  cn</span><br><span class="line">Is CN=make, OU=chenjin, O=chenjin, L=nanchang, ST=jiangxi, C=cn correct?</span><br><span class="line">  [no]:  yes</span><br><span class="line"></span><br><span class="line">Enter key password <span class="keyword">for</span> &lt;make&gt;</span><br><span class="line">	(RETURN <span class="keyword">if</span> same as keystore password):</span><br><span class="line">Re-enter new password:</span><br></pre></td></tr></table></figure>
<p>签名: 可以使用360签名工具签名, 使用比较简单, 直接看工具附带的文档: <a href="http://acmxpbyjik.l7.yunpan.cn/lk/Q7wWewv7nYm3n" target="_blank" rel="external">yunpan.cn</a></p>
<p>最后安装签名工具获取签名: <a href="https://github.com/mobileresearch/weibo_android_sdk/blob/master/app_signatures.apk?raw=true" target="_blank" rel="external">mobileresearch/weibo_android_sdk</a><br>安装完成后执行, 输入自己应用的包名, 就可以获得一串签名了. 小心仔细地把签名填写到微信平台 Android 下的相关位置并提交.</p>
<p>Ps: 如果你在开放平台上填写的签名和你的包名不一致的话会出现闪退的问题, 将无法使用微信分享.</p>
<h2 id="参考资料">参考资料</h2><ol>
<li><a href="https://github.com/xu-li/cordova-plugin-wechat" target="_blank" rel="external">xu-li/cordova-plugin-wechat</a></li>
<li><a href="https://github.com/vilic/cordova-plugin-wechat" target="_blank" rel="external">vilic/cordova-plugin-wechat</a></li>
<li><a href="https://github.com/vilic/cordova-plugin-wechat/wiki/Android-%E5%BE%AE%E4%BF%A1-SDK-%E7%AD%BE%E5%90%8D%E9%97%AE%E9%A2%98" target="_blank" rel="external">Android-微信-SDK-签名问题</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>自从前年接触混合开发以来就非常看好 Cordova, 唯一遇到的比较大的问题就是本地化的无法解决, 直到今天公司重新启动关于混合app的开发和应用, 不可避免的有要重拾这些问题, 刚开始本来选择一些国内的集成平台, 开发到中期果断放弃, 原因只能呵呵了.. 本抱着如果一个星期不能解决分享的问题就滚回去写原生的, 没想到在我之前已经有大大封装好了分享库, 免去了自己写的风险, 这里万分感谢.</p>]]>
    
    </summary>
    
      <category term="Cordova" scheme="http://huyaohui.com/tags/Cordova/"/>
    
      <category term="HybridApp" scheme="http://huyaohui.com/tags/HybridApp/"/>
    
      <category term="Plugin" scheme="http://huyaohui.com/tags/Plugin/"/>
    
      <category term="HTML5" scheme="http://huyaohui.com/categories/HTML5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Cordova config.xml 常用配置说明]]></title>
    <link href="http://huyaohui.com/2015/11/11/Cordova-config.xml-%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/"/>
    <id>http://huyaohui.com/2015/11/11/Cordova-config.xml-常用配置说明/</id>
    <published>2015-11-11T10:11:08.000Z</published>
    <updated>2016-01-03T02:58:23.000Z</updated>
    <content type="html"><![CDATA[<p>config.xml 是一个用来配置应用的全局属性的文件, 在此文件中配置的属性应该是能适应所有平台的. 在编译的时候配置文件将会被编译到对应的平台中.</p>
<a id="more"></a>
<h2 id="禁用_WebViewBounce">禁用 WebViewBounce</h2><p>UIWebView是iOS SDK中一个最常用的控件, 在Cordova中, 默认也是使用UIWebView作为默认视图显示我们的HTML应用的.<br>在使用Cordova的项目中, 默认WebViewBounce这个选项是打开的, 所以使用手指向下或者向上滑动屏幕时, 经常会看到页面底部和屏幕底部会出现一大片空白, 然后松开手指后, 再弹回去的特效. </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">preference</span> <span class="attribute">name</span>=<span class="value">"WebViewBounce"</span> <span class="attribute">value</span>=<span class="value">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">preference</span> <span class="attribute">name</span>=<span class="value">"DisallowOverscroll"</span> <span class="attribute">value</span>=<span class="value">"true"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>config.xml 是一个用来配置应用的全局属性的文件, 在此文件中配置的属性应该是能适应所有平台的. 在编译的时候配置文件将会被编译到对应的平台中.</p>]]>
    
    </summary>
    
      <category term="Config" scheme="http://huyaohui.com/tags/Config/"/>
    
      <category term="Cordova" scheme="http://huyaohui.com/tags/Cordova/"/>
    
      <category term="HybridApp" scheme="http://huyaohui.com/tags/HybridApp/"/>
    
      <category term="HTML5" scheme="http://huyaohui.com/categories/HTML5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iTerm 保存远程登入密码]]></title>
    <link href="http://huyaohui.com/2015/10/26/iTerm-%E4%BF%9D%E5%AD%98%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%85%A5%E5%AF%86%E7%A0%81/"/>
    <id>http://huyaohui.com/2015/10/26/iTerm-保存远程登入密码/</id>
    <published>2015-10-26T07:33:17.000Z</published>
    <updated>2016-01-03T03:10:10.000Z</updated>
    <content type="html"><![CDATA[<p>在 Mac OSX 上 iterm2 是很好的终端, 但却不能很好的支持多profiles, 当要管理的机器较多时, 就比较麻烦了. 好在它有profiles设置, 只是不能保存ssh登录帐号及密码, 它还提供了加载profiles时执行外部命令的功能, 因此, 这里就可以使用sshpass来帮它执行.</p>
<a id="more"></a>
<h2 id="安装_sshpass">安装 sshpass</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install http://git.io/sshpass.rb</span><br></pre></td></tr></table></figure>
<h2 id="iTerm_配置">iTerm 配置</h2><p>Profile -&gt; General -&gt; 配置<br><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB2QaQqgpXXXXaEXpXXXXXXXXXX_!!1134915854.png" alt=""></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/bin/sshpass -p 密码 ssh root@地址</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>在 Mac OSX 上 iterm2 是很好的终端, 但却不能很好的支持多profiles, 当要管理的机器较多时, 就比较麻烦了. 好在它有profiles设置, 只是不能保存ssh登录帐号及密码, 它还提供了加载profiles时执行外部命令的功能, 因此, 这里就可以使用sshpass来帮它执行.</p>]]>
    
    </summary>
    
      <category term="Note" scheme="http://huyaohui.com/tags/Note/"/>
    
      <category term="iTerm" scheme="http://huyaohui.com/tags/iTerm/"/>
    
      <category term="sshpass" scheme="http://huyaohui.com/tags/sshpass/"/>
    
      <category term="iTerm" scheme="http://huyaohui.com/categories/iTerm/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Git 常用命令使用方法]]></title>
    <link href="http://huyaohui.com/2015/10/22/Git-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://huyaohui.com/2015/10/22/Git-常用命令使用方法/</id>
    <published>2015-10-22T10:02:49.000Z</published>
    <updated>2016-01-03T02:58:45.000Z</updated>
    <content type="html"><![CDATA[<p>版本控制系统是为懒人准备的, 它让懒人们比那些善于备份文档的勤劳人拥有更干净的文件系统以及更多的可以活着的时间. 那么一个程序猿, 一个哎偷懒的程序猿有什么理由不使用它呢.</p>
<a id="more"></a>
<h2 id="简单命令">简单命令</h2><h3 id="查看分支">查看分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看创建的</span></span><br><span class="line">git branch <span class="operator">-l</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看远程分支</span></span><br><span class="line">git branch -r</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有分支</span></span><br><span class="line">git branch <span class="operator">-a</span></span><br></pre></td></tr></table></figure>
<h3 id="创建分支">创建分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch &lt;分支名&gt;</span><br></pre></td></tr></table></figure>
<h3 id="切换分支">切换分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;分支名&gt;</span><br></pre></td></tr></table></figure>
<h3 id="创建并同时切换分支">创建并同时切换分支</h3><p>这条命令同样可以切换到远程分支<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;分支名&gt;</span><br></pre></td></tr></table></figure></p>
<h3 id="回滚">回滚</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset [版本号]</span><br></pre></td></tr></table></figure>
<h3 id="分支合并">分支合并</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果要将开发中的分支(develop), 合并到稳定分支(master)</span></span><br><span class="line"><span class="comment"># 首先切换的master分支</span></span><br><span class="line">git checkout master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 然后执行合并操作</span></span><br><span class="line">git merge develop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果有冲突, 会提示你, 然后查看冲突文件</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">git commit -m <span class="string">"备注"</span> *</span><br></pre></td></tr></table></figure>
<h3 id="提交分支到远程仓库">提交分支到远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin develop</span><br></pre></td></tr></table></figure>
<h3 id="获取远程主机上的修改">获取远程主机上的修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取所有</span></span><br><span class="line">git fetch &lt;远程主机名&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取某个</span></span><br><span class="line">git fetch &lt;远程主机名&gt; &lt;分支名&gt;</span><br></pre></td></tr></table></figure>
<h3 id="设置默然push,_pull提交分支">设置默然push, pull提交分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch --set-upstream-to=origin/develop</span><br></pre></td></tr></table></figure>
<h3 id="取消对master的跟踪">取消对master的跟踪</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch --unset-upstream master</span><br></pre></td></tr></table></figure>
<h3 id="分支衍合">分支衍合</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分支衍合和分支合并的差别在于, 分支衍合不会保留合并的日志, 不留痕迹</span></span><br><span class="line"><span class="comment"># 而分支合并则会保留合并的日志</span></span><br><span class="line"><span class="comment"># 要将开发中的分支(develop), 衍合到稳定分支(master)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 首先切换的master分支</span></span><br><span class="line">git checkout master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 然后执行衍和操作</span></span><br><span class="line">git rebase develop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果有冲突, 会提示你, 然后查看冲突文件</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有冲突解决后, 提交更改</span></span><br><span class="line">git rebase --continue</span><br></pre></td></tr></table></figure>
<h3 id="删除分支">删除分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch <span class="operator">-d</span> &lt;分支名&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果该分支没有合并到主分支会报错</span></span><br><span class="line"><span class="comment"># 可以用以下命令强制删除分支</span></span><br><span class="line">git branch -D &lt;分支名&gt;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>版本控制系统是为懒人准备的, 它让懒人们比那些善于备份文档的勤劳人拥有更干净的文件系统以及更多的可以活着的时间. 那么一个程序猿, 一个哎偷懒的程序猿有什么理由不使用它呢.</p>]]>
    
    </summary>
    
      <category term="CLI" scheme="http://huyaohui.com/tags/CLI/"/>
    
      <category term="Git" scheme="http://huyaohui.com/tags/Git/"/>
    
      <category term="Note" scheme="http://huyaohui.com/tags/Note/"/>
    
      <category term="Git" scheme="http://huyaohui.com/categories/Git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Xcode 链接真机调试]]></title>
    <link href="http://huyaohui.com/2015/10/01/Xcode-%E9%93%BE%E6%8E%A5%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95/"/>
    <id>http://huyaohui.com/2015/10/01/Xcode-链接真机调试/</id>
    <published>2015-10-01T13:46:24.000Z</published>
    <updated>2016-01-03T03:11:43.000Z</updated>
    <content type="html"><![CDATA[<p>众所周知, 苹果的安全性做的一直很高, 导致ios开发的门槛相对于安卓来说, 高出不少, 也就导致了现在iOS高级工程师一直是稀缺的资源。今天我们来谈一谈苹果的真机调试。</p>
<a id="more"></a>
<p>苹果的真机测试要复杂好多, 最主要的是你需要花费99$购买苹果的开发者认证, 其他的条件有: </p>
<blockquote>
<p>一台测试手机或pad<br>一台装有苹果系统的电脑</p>
</blockquote>
<p>具体步骤: </p>
<ol>
<li><p>到官网<a href="https://developer.apple.com/" target="_blank" rel="external">https://developer.apple.com/</a>, 点击member center, 用你刚刚购买的账号和密码登录,会看到如下所示的界面:<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2SPQdfFXXXXbIXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>点击第一列, 第二个图标(Certificates,Identifiers &amp; Profiles)到如下界面:<br><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2por9fFXXXXXkXFXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>点击IOS Apps众的任一个子项, 进如如下界面:<br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2LRApfFXXXXXXXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>点击Certificates下面的呃All,右半部分会如上面那张图呈现, 再点击右上角的＋号, 跳到:<br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB21f7gfFXXXXbmXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>将界面往下拉, 会看到:<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2HDktfFXXXXcLXXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>点击蓝色字体World Developer Relations Certificate Authority,会下载如下文件: AppleWWDRCA.cer 文件<br><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB2fCsefFXXXXbNXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>双击该文件, 打开如下界面, 并现实安装了Apple worldwide Developer Relatios Cer….证书<br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2KAZyfFXXXXbDXXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>安装之后, 在钥匙窜访问下, 选择证书处理-&gt;从证书颁发机构请求证书<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2n0QpfFXXXXXnXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>点击….请求证书之后, 跳到如下界面:<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2cf7XfFXXXXcqXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>如下填写:<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2jt.bfFXXXXcAXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>点击继续后,继续一路点下去, 最后在桌面生成如下文件:CertificateSigningRequest.certSigningRequest<br><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2DLr.fFXXXXc2XpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>好了, 第一阶段已经完成, 到第二阶段, 接下来我们要做的就是在官网上将我们调试用的移动设备, 还有调试用的电脑, 调试的app 项目, 以及购买的账户信息绑定到一起, 生成几个证书, 供Xcode和移动设备识别, 用来进行真机测试</p>
</li>
<li><p>再次到达如下的页面:<br><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2myUgfFXXXXa6XpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>选择Development 中的iOS App Development, 然后点击continue<br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB29AAmfFXXXXXqXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>继续点击continue,知道出现如下界面:<br><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2qGAofFXXXXXFXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>点击chose File , 将我们刚在再钥匙访问下生成的文件上传, 进入如下界面点击Generate<br><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB23g7yfFXXXXbjXXXXXXXXXXXX_!!1134915854.jpg" alt=""><br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2QY7ifFXXXXaFXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>点击声称后跳到如下界面, 点击download<br><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB2nsgdfFXXXXblXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>点击download之后将下载如下文件: <code>ios_development.cer</code> 然后双击安装<br><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB2CoZGfFXXXXXMXXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>将自己的设备添加到该开发者账号, 点击Devices,再点击右上角的＋号<br><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB2XocwfFXXXXbqXXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>点击之后进入如下界面, 给自己的设备起一个名字(随便), 下 面的UDID填写你要测试的那台真机的UDID<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2A5H9fFXXXXc1XpXXXXXXXXXX_!!1134915854.jpg" alt=""><br>这里附上测试设备udid的寻找方法: 打开iTunes, 用鼠标点击一下ECID的位置就可以看到UDID了.<br>如下所示:<br><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB23iEufFXXXXcsXXXXXXXXXXXX_!!1134915854.jpg" alt=""><br><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB25UEnfFXXXXXBXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>新建一个应用程序的识别ID: 点击identifiers, 点击右上角的＋号, 到如下界面:<br>在name出填写APP ID描述, 一般是随便写, 一直往下拉, 在如下位置填写你的app ID,格式一般为com..,其他默认, 点击continue,submit<br><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB27DIdfFXXXXbQXpXXXXXXXXXX_!!1134915854.jpg" alt=""><br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2hCIhfFXXXXbXXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>绑定app mac 手机 和开发者账号: 点击provisioning Profiles,再点击右上角的＋号, 到如下页面<br><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2saZufFXXXXcuXXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>选择ios App Development, 然后点击continus,并在如下页面选择刚创建的app ID, 点击contine<br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2yCZzfFXXXXbgXXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>上一步完成后跳到如下页面, 绑定刚才的mac ,选则刚才生成的certificates,点击continue<br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2NuEGfFXXXXXSXXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>选择绑定的手机, 点击continue<br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2BxMvfFXXXXbJXXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>给他起个名字, 点击generate<br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2_Z7mfFXXXXX_XpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>跳到如下界面, 下载待会使用<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2misofFXXXXc_XXXXXXXXXXXX_!!1134915854.jpg" alt=""><br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2ZnEefFXXXXbiXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>好的, 这样账号上所有的操作完成, 接下来只需要在mac 本地进行配置了, 首先用Xcode 打开<br><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2uAMkfFXXXXadXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>按图示打开<br><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB2u_2.fFXXXXcQXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>进入如下画面, 右键选中设备<br><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2q2oAfFXXXXa.XXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>点击show provisioning profiles,进入如下界面 -&gt; 点击＋号进行添加, 将刚才下下来的如下文件, 添加进去:<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB28bZrfFXXXXcPXXXXXXXXXXXX_!!1134915854.jpg" alt=""><br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2TpAxfFXXXXb3XXXXXXXXXXXX_!!1134915854.jpg" alt=""><br>添加之后, 我们就只差最后一步, 就可以真机调试了</p>
</li>
<li><p>打开项目的 plist 文件, 将右侧表中的不bundle identifier改为我们刚才设置的com.. (我的刚才是com.ljw.helloworld)<br><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB2QuIbfFXXXXcHXpXXXXXXXXXX_!!1134915854.jpg" alt=""><br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2TioafFXXXXcRXpXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
<li><p>好的, 大功告成, 我们终于可以开心的真机调试了<br><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB26RgvfFXXXXckXXXXXXXXXXXX_!!1134915854.jpg" alt=""></p>
</li>
</ol>
<p>Ps: 其实从 19 步开始就可以省略了, 还有种更加单添加设备的方法<br>直接链接手机到Xcode编译, 会报错, 然后根据提示狂点下一步, 稍等片刻就可以直接真机调试了.</p>
<p><br><br>转载至: <a href="http://www.mexiqq.com/2014/07/25/xcode6+ios8%E6%9C%80%E6%96%B0%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E6%95%99%E7%A8%8B/" target="_blank" rel="external">xcode6+ios8最新真机调试教程</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>众所周知, 苹果的安全性做的一直很高, 导致ios开发的门槛相对于安卓来说, 高出不少, 也就导致了现在iOS高级工程师一直是稀缺的资源。今天我们来谈一谈苹果的真机调试。</p>]]>
    
    </summary>
    
      <category term="Note" scheme="http://huyaohui.com/tags/Note/"/>
    
      <category term="Xcode" scheme="http://huyaohui.com/tags/Xcode/"/>
    
      <category term="iOS" scheme="http://huyaohui.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://huyaohui.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Apple developer 账号注册流程详解]]></title>
    <link href="http://huyaohui.com/2015/09/30/Apple-developer-%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B%E8%AF%A6%E8%A7%A3/"/>
    <id>http://huyaohui.com/2015/09/30/Apple-developer-账号注册流程详解/</id>
    <published>2015-09-30T13:57:19.000Z</published>
    <updated>2016-01-03T02:57:56.000Z</updated>
    <content type="html"><![CDATA[<p>当前苹果的 iPhone 手机可谓是热火朝天，开发 iOS App 应用的人也越来越多。如果要在真机上测试 App 应用的话，需要我们有一个开发者账号。下面和大家分享一下过程和细节，以免大家走了弯路。</p>
<a id="more"></a>
<ol>
<li><p>登陆苹果开发者官网页面 <a href="https://developer.apple.com/programs/ios/" target="_blank" rel="external">https://developer.apple.com/programs/ios/</a></p>
</li>
<li><p>点击“enroll now $99/year”按钮（如下图）<br><img src="https://img.alicdn.com/imgextra/i3/1134915854/TB2n1gcfFXXXXayXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
</li>
<li><p>在弹出的介绍页面中点击按钮“continue”(如下图）<br><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB20RDYfFXXXXakXpXXXXXXXXXX_!!1134915854.png" alt=""></p>
</li>
<li><p>接下来的页面是让你选择用现有的苹果账号（Existing Apple ID)还是新建一个苹果账号（New Apple ID)来注册成为开发者.你根据自己需要选择。假如是已有账号的话会省一些步骤。因为是公司需要，所以我点击了“Create Apple ID”<br><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2vuDQfFXXXXbIXpXXXXXXXXXX_!!1134915854.png" alt=""></p>
</li>
<li><p>接下来的页面新Apple ID 的注册页面（已经有账号的可以不看此步骤）。First Name和lastname最好写身份证上的拼音。因为出现问题你客服电话追踪的时候他们也会提示你修改的。总之信息真实比啥都重要。接着填写基本的信息啊，密码问题设置啊之类的。申请账号必填的信息：first name（名字的名）/lastname（姓氏）/apple id/password（密码）/confirmpassword（确认密码）/三个security Question（安全问题预设）和Answer（答案）/选择date of birth（生日）/country（国家）/address（地址）/town（城市）/province（省份）/勾选同意/输入图片显示验证码/之后就可以点击create Apple ID 了。之后需要到邮箱点击链接验证一下。验证后页面会提示你登陆。<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2JHscfFXXXXaDXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
</li>
<li><p>登陆之后接下来的页面是让你选择要注册为个人开发者（Individual）还是公司开发者（Company）。我选择Company。<br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2_Ir0fFXXXXcZXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
</li>
<li><p>接下来的协议，勾选之后点同意（Agree），进入下一步。<br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2mlZgfFXXXXXKXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
</li>
<li><p>选择账号的信息，包括申请者是啥角色（比如产品经理还是技术开发之类的）/你从事开发APP的时间/你开发的方向/你是否还有其它项目等等。填写完了按页面最下面的“Register”按钮<br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB2kYMafFXXXXbiXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
</li>
<li><p>接着填写公司的信息，不要乱填写，要和营业执照上面的一致才行。苹果那边会查到你填写的公司对应的法人信息的。（ps：这里的电话可以写你自己或你上司的，后面苹果审核会致电这个电话。确认法人，接电话的人要口径一致。法人信息要填写真实的营业执照上的名字拼音）填写完了点“continue”按钮<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2EQIdfFXXXXapXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
</li>
<li><p>接下来要输入一些真实的公司信息啦。这里一定要输入的项目是：organization type（组织类型）/legalentity name（公司的英文名，营业执照没有写英文没关系。后面苹果会电话验证，电话里你确认是这个英文名就好）/website（主页）/工作邮箱（要填写你每天查看的，苹果会把申请进度发这邮箱）/总部号码（可填写你自己手机号码，要加country code：86，分机号Ext可不填或者随便一个公司同事的号码，苹果会打这个电话确认这个公司信息是不是和你填写的一样，所以一定要事先和接电话的人沟通清楚）/duns  number。这个邓氏编码也是需要申请的（申请方法: <a href="/2015/09/30/Apple-D-U-N-S-Number-注册流程详解/">Apple D-U-N-S Number 注册流程详解</a>）。填写完上面的信息就可以点“continue”按钮了。<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2asIjfFXXXXXfXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
</li>
<li><p>输入公司基本信息和duns number 之后需要你选择你的项目类型。我选择的是 ios项目。选择完了点“continue”按钮<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB275H_fFXXXXbJXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
</li>
<li><p>再次确认你的信息，没问题点continue。之后邮箱会收到一封等待的苹果审核的邮件</p>
</li>
<li><p>接下来要等待你苹果公司联系你公司的法人确认公司信息，以及申请注册的账号是不是公司的员工在申请之类的。他们联系的号码会是你之前填写的那个法人的联系方式。苹果打电话联系法人确认公司信息后 就会收到以下的确认邮件。<br>从邮件的“program license agreement”连接点入<br><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2vETOfFXXXXbVXpXXXXXXXXXX_!!1134915854.png" alt=""></p>
</li>
<li><p>同意协议后提交</p>
</li>
<li>同意协议后提交提交后转到付款银行卡信息填写页面，填写付款信息。这里要填写具有美元支付功能的银行卡</li>
<li><p>填写付款信息后 提交，付款成功就出现这个页面啦<br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB22E6SfFXXXXa5XpXXXXXXXXXX_!!1134915854.png" alt=""></p>
</li>
<li><p>付款之后等待大概一个工作日。邮箱收到一封开发者账号激活邮件，点邮件里面的 Activation Code<br><img src="https://img.alicdn.com/imgextra/i1/1134915854/TB221H_fFXXXXbUXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
</li>
<li><p>页面跳转到苹果的账号激活 页面，点击那个蓝色的“activate”按钮<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB200jRfFXXXXbkXpXXXXXXXXXX_!!1134915854.png" alt=""></p>
</li>
<li><p>激活成功就可以使用开发者账号啦。以后登录苹果开发者官网就可以发布APP应用</p>
</li>
</ol>
<p>一定要记住申请的过程中遇到问题致电苹果开发者客服4006701855<br>他们会全程跟进你的注册进度。最主要他们态度很好而且很高效</p>
<p>Ps: 需要提前准备好的材料：</p>
<blockquote>
<p>有国际支付功能的银行卡，并且里面有￥99（公司类型的账号需要支付99$)<br>公司的Duns编码（没有的话参考下面的操作或者电话上面的客服电话他们会给你邮件详细的方法）<br>接收和激活信息的邮箱<br>公司法人代表的姓名<br>电话号码，苹果公司能电话确认您公司信息的电话号码</p>
</blockquote>
<p><br><br>转载至: <a href="http://www.niaogebiji.com/article-5703-1.html" target="_blank" rel="external">2015年最新苹果开发者账号注册流程详解</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>当前苹果的 iPhone 手机可谓是热火朝天，开发 iOS App 应用的人也越来越多。如果要在真机上测试 App 应用的话，需要我们有一个开发者账号。下面和大家分享一下过程和细节，以免大家走了弯路。</p>]]>
    
    </summary>
    
      <category term="Note" scheme="http://huyaohui.com/tags/Note/"/>
    
      <category term="iOS" scheme="http://huyaohui.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://huyaohui.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Apple D-U-N-S Number 注册流程详解]]></title>
    <link href="http://huyaohui.com/2015/09/30/Apple-D-U-N-S-Number-%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B%E8%AF%A6%E8%A7%A3/"/>
    <id>http://huyaohui.com/2015/09/30/Apple-D-U-N-S-Number-注册流程详解/</id>
    <published>2015-09-30T13:26:24.000Z</published>
    <updated>2016-01-03T02:58:02.000Z</updated>
    <content type="html"><![CDATA[<p>邓氏编码是邓白氏拥有的一个独一无二的9位数字全球编码系统，它可以帮助您迅速获得邓白氏独创的，丰富而且高质量的信息产品和服务。邓氏编码已经成为电子商务中一个国际认可的、常用的公司识别符号。这里着重讲述 Apple 邓白氏申请过程</p>
<a id="more"></a>
<ol>
<li>打开申请地址: <a href="https://developer.apple.com/support/D-U-N-S/" target="_blank" rel="external">https://developer.apple.com/support/D-U-N-S/</a></li>
</ol>
<p>点击下面链接:<br><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2iI_0fFXXXXXSXpXXXXXXXXXX_!!1134915854.png" alt=""></p>
<ol>
<li>首先登陆duns网站（链接在参考资料里） 输入公司信息查看贵公司是否已拥有邓式编码，如果您没有查到任何资料系统将会让您选择是否要提交邓白氏编码申请。提交的邓白氏编码信息要绝对准确才行，因为后面苹果审核会核对邓白氏编码上写的公司信息是否和营业执照一致。<br>注意输入的公司信息不要带城市名。比如你公司英文是”Shenzhen AAABBB Technology Co., Ltd.“，你搜索的时候填写” AAABBB Technology Co., Ltd.“。”Shenzhen“两个字可以在dunsnumber 公司电话你的时候你要求他加上。因为填写了城市会搜索出带Shenzhen的公司名称，好多。你就不能按下一步申请duns  number了。注意啦，这里填写的phone number可以填写自己的。duns number 公司会拨打 headquarters address of your company orgnization里你填写的电话来确认你们公司的全称/注册地址/英文名等信息。<br>这个页面上的信息填写完了 点最下面的“continue”按钮<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB22SrLfFXXXXcUXpXXXXXXXXXX_!!1134915854.png" alt=""></li>
</ol>
<p>3.到了这里没有查询到与您填写的公司相关的duns number信息 ，系统提示你是否要提交申请。你勾选同意协议然后提交（如图）.提交申请过后 ，网页上提示5个工作日左右会收到答复。实际第二天上午你就会收到duns编码受理回复的邮件了.<br><img src="https://img.alicdn.com/imgextra/i2/1134915854/TB2TpQbfFXXXXbcXXXXXXXXXXXX_!!1134915854.png" alt=""></p>
<p>4.稍等大概两个工作左右他们会致电你申请duns编码时提供的总部电话核实公司信息。信息都没有问题之后当天就会邮件给您将您的duns编码发送到邮箱内。<br>稍等大概三个工作日他们还没电话过来的话。你可以致电B&amp;D,他们很高效地将你的duns处理好。duns联系02123213946。<br>我问过客服了，会打HeadQuarters的电话,所以那个电话最好填写你自己的。<br>收到的duns number 是9位数字的。</p>
<p>Ps: 申请到duns number 大概等三个工作日之后再到苹果页面继续注册开发者账号。我当时因为没有等三个工作日，填写信息时出现以下的提示”please review the fields highlighted below . Before resubmitting , please look up your D&amp;B information.“<br><img src="https://img.alicdn.com/imgextra/i4/1134915854/TB2L7z_fFXXXXbAXXXXXXXXXXXX_!!1134915854.png" alt=""> </p>
<p>联系苹果技术客服4006701855，这种情况两个可能一个是浏览器的原因，一个是duns编码数据没有同步到苹果数据库。（一般duns 编码申请下来到数据同步到苹果数据库需要两个工作日）所以只能再等等两个工作日。 </p>
<p>由于两次致电苹果客服，苹果客服小姐给了一个跟踪号：304736385，下次致电客服的时候提交这个跟踪号对方就知道你卡在哪里了，有了这个跟踪号就意味着他们会协助你一直到账号申请成功。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>邓氏编码是邓白氏拥有的一个独一无二的9位数字全球编码系统，它可以帮助您迅速获得邓白氏独创的，丰富而且高质量的信息产品和服务。邓氏编码已经成为电子商务中一个国际认可的、常用的公司识别符号。这里着重讲述 Apple 邓白氏申请过程</p>]]>
    
    </summary>
    
      <category term="Note" scheme="http://huyaohui.com/tags/Note/"/>
    
      <category term="iOS" scheme="http://huyaohui.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://huyaohui.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于番羽弓虽访问Google的方法]]></title>
    <link href="http://huyaohui.com/2015/09/26/%E5%85%B3%E4%BA%8E%E7%95%AA%E7%BE%BD%E5%BC%93%E8%99%BD%E8%AE%BF%E9%97%AEGoogle%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://huyaohui.com/2015/09/26/关于番羽弓虽访问Google的方法/</id>
    <published>2015-09-26T13:27:01.000Z</published>
    <updated>2016-01-03T03:12:38.000Z</updated>
    <content type="html"><![CDATA[<p>由于众所周知的原因, Google等一系列的网站并不是很招ZF的喜欢, 导致无法访问, 但是作为程序猿怎么能被这点小问题给难倒呢, 对吧~</p>
<a id="more"></a>
<p>访问Google目前有三种方法: </p>
<ol>
<li>通过镜像站直接访问 </li>
<li>配置本机hosts文件来跳过DNS解析</li>
<li>VPN 全局代理或 局部代理</li>
</ol>
<h2 id="镜像站">镜像站</h2><h3 id="原版：">原版：</h3><p><a href="http://www.gufen138.com/" target="_blank" rel="external">http://www.gufen138.com/</a><br><a href="http://www.wanzi138.com/" target="_blank" rel="external">http://www.wanzi138.com/</a><br><a href="https://g.yh.gs/" target="_blank" rel="external">https://g.yh.gs/</a><br><a href="https://guge.in/" target="_blank" rel="external">https://guge.in/</a><br><a href="http://g.yon.hk/" target="_blank" rel="external">http://g.yon.hk/</a><br><a href="https://gg.wen.lu/" target="_blank" rel="external">https://gg.wen.lu/</a><br><a href="https://g.weme.so/" target="_blank" rel="external">https://g.weme.so/</a><br><a href="https://gs.awei.me/" target="_blank" rel="external">https://gs.awei.me/</a><br><a href="http://www.ppx.pw/" target="_blank" rel="external">http://www.ppx.pw/</a><br><a href="http://gg.cytbj.com/" target="_blank" rel="external">http://gg.cytbj.com/</a><br><a href="http://www.gog.pw/" target="_blank" rel="external">http://www.gog.pw/</a><br><a href="https://g.eeload.com/" target="_blank" rel="external">https://g.eeload.com/</a><br><a href="http://www.guge.link/" target="_blank" rel="external">http://www.guge.link/</a><br><a href="http://www.ggooo.net/" target="_blank" rel="external">http://www.ggooo.net/</a><br><a href="https://www.ko50.com/" target="_blank" rel="external">https://www.ko50.com/</a><br><a href="https://www.guge.date/" target="_blank" rel="external">https://www.guge.date/</a><br><a href="https://www.guge.click/" target="_blank" rel="external">https://www.guge.click/</a><br><a href="https://gg.searcher.top/" target="_blank" rel="external">https://gg.searcher.top/</a><br><a href="https://guge.droider.cn/" target="_blank" rel="external">https://guge.droider.cn/</a><br><a href="http://gg.cellmean.com/" target="_blank" rel="external">http://gg.cellmean.com/</a><br><a href="https://google.xface.me/" target="_blank" rel="external">https://google.xface.me/</a><br><a href="http://go.hibenben.com/" target="_blank" rel="external">http://go.hibenben.com/</a><br><a href="http://www.google52.com/" target="_blank" rel="external">http://www.google52.com/</a><br><a href="https://www.guge119.com/" target="_blank" rel="external">https://www.guge119.com/</a><br><a href="http://www.googlestable.cn/" target="_blank" rel="external">http://www.googlestable.cn/</a><br><a href="http://google.sidney-aldebaran.me/" target="_blank" rel="external">http://google.sidney-aldebaran.me/</a><br><a href="https://www.sslpxy.com/" target="_blank" rel="external">https://www.sslpxy.com/</a><br><a href="http://www.googlestable.cn/" target="_blank" rel="external">http://www.googlestable.cn/</a><br><a href="http://gg.cellmean.com/" target="_blank" rel="external">http://gg.cellmean.com/</a><br><a href="http://hisbig.com/" target="_blank" rel="external">http://hisbig.com/</a><br><a href="https://iustudio.science/" target="_blank" rel="external">https://iustudio.science/</a><br><a href="https://www.nssjs.com/" target="_blank" rel="external">https://www.nssjs.com/</a> </p>
<h3 id="非原版：">非原版：</h3><p>丸子163：<a href="http://www.wanzi163.com/" target="_blank" rel="external">http://www.wanzi163.com/</a><br>谷粉163：<a href="http://www.gufen163.com/" target="_blank" rel="external">http://www.gufen163.com/</a><br>微搜：<a href="http://www.wesou.org/" target="_blank" rel="external">http://www.wesou.org/</a><br>谷粉网：<a href="http://www.gool.wang/" target="_blank" rel="external">http://www.gool.wang/</a><br>嘟嘟搜：<a href="http://www.dodosou.com/" target="_blank" rel="external">http://www.dodosou.com/</a><br>谷歌婊：<a href="http://www.gugebiao.com/" target="_blank" rel="external">http://www.gugebiao.com/</a><br>谷歌363：<a href="http://www.g363.com/" target="_blank" rel="external">http://www.g363.com/</a><br>丸子138：<a href="http://www.wanzi138.com/" target="_blank" rel="external">http://www.wanzi138.com/</a><br>谷粉138：<a href="http://www.gufen138.com/" target="_blank" rel="external">http://www.gufen138.com/</a><br>谷歌搜索：<a href="http://guge.pro/" target="_blank" rel="external">http://guge.pro/</a><br>谷鸽搜索：<a href="http://www.ose.cc/" target="_blank" rel="external">http://www.ose.cc/</a><br>给搜搜索：<a href="http://www.geiso.cn/" target="_blank" rel="external">http://www.geiso.cn/</a><br>快搜香港：<a href="http://hk.kuaiso.com/" target="_blank" rel="external">http://hk.kuaiso.com/</a><br>神灯搜索：<a href="http://www.sdeng.cn/" target="_blank" rel="external">http://www.sdeng.cn/</a><br>谷粉搜搜：<a href="http://www.gfsousou.cn/" target="_blank" rel="external">http://www.gfsousou.cn/</a><br>谷饭搜索：<a href="http://sogg.sinaapp.com/" target="_blank" rel="external">http://sogg.sinaapp.com/</a><br>谷粉搜搜：<a href="http://www.googfen.com/" target="_blank" rel="external">http://www.googfen.com/</a><br>谷粉搜搜：<a href="http://gfsoso.hao136.com/" target="_blank" rel="external">http://gfsoso.hao136.com/</a><br>红杏谷歌：<a href="http://www.hxgoogle.com/" target="_blank" rel="external">http://www.hxgoogle.com/</a><br>九尾搜索：<a href="http://jiuweisoso.wallpai.com/" target="_blank" rel="external">http://jiuweisoso.wallpai.com/</a><br>Whats搜索：<a href="http://whatsoo.com/" target="_blank" rel="external">http://whatsoo.com/</a><br>布谷鸟搜索：<a href="http://m.wcuckoo.com/search/" target="_blank" rel="external">http://m.wcuckoo.com/search/</a><br>Ask：<a href="http://home.tb.ask.com/" target="_blank" rel="external">http://home.tb.ask.com/</a><br>AOL：<a href="http://m.search.aol.com/" target="_blank" rel="external">http://m.search.aol.com/</a><br>5Ask：<a href="http://cn.5ask.com/" target="_blank" rel="external">http://cn.5ask.com/</a><br>Avira：<a href="https://safesearch.avira.com/" target="_blank" rel="external">https://safesearch.avira.com/</a><br>Suche：<a href="http://suche.web.de/" target="_blank" rel="external">http://suche.web.de/</a><br>Im Google：<a href="http://www.imgoogle.cn/" target="_blank" rel="external">http://www.imgoogle.cn/</a><br>Disconnect：<a href="https://search.disconnect.me/" target="_blank" rel="external">https://search.disconnect.me/</a><br>WebWebWeb：<a href="http://webwebweb.com/" target="_blank" rel="external">http://webwebweb.com/</a><br>谷粉搜搜: <a href="http://www.gufensoso.com/" target="_blank" rel="external">http://www.gufensoso.com/</a><br>xiexingwen: <a href="http://www.xiexingwen.com/" target="_blank" rel="external">http://www.xiexingwen.com/</a> </p>
<h3 id="谷歌学术：">谷歌学术：</h3><p><a href="http://scholar.ppx.pw/" target="_blank" rel="external">http://scholar.ppx.pw/</a><br><a href="https://www.roolin.com/" target="_blank" rel="external">https://www.roolin.com/</a><br><a href="http://www.scholarnet.cn/" target="_blank" rel="external">http://www.scholarnet.cn/</a><br><a href="http://gg.cytbj.com/scholar" target="_blank" rel="external">http://gg.cytbj.com/scholar</a><br><a href="http://xueshu.cytbj.com/scholar/" target="_blank" rel="external">http://xueshu.cytbj.com/scholar/</a><br><a href="http://gfss.cc.wallpai.com/scholar/" target="_blank" rel="external">http://gfss.cc.wallpai.com/scholar/</a><br><a href="https://www.guge119.com/scholar/" target="_blank" rel="external">https://www.guge119.com/scholar/</a><br><a href="http://www.google52.com/scholar.html" target="_blank" rel="external">http://www.google52.com/scholar.html</a><br><a href="http://scholar.glgoo.com/" target="_blank" rel="external">http://scholar.glgoo.com/</a><br><a href="https://scholar.gotosearch.info/" target="_blank" rel="external">https://scholar.gotosearch.info/</a><br><a href="https://www.gugesou.com/scholar/" target="_blank" rel="external">https://www.gugesou.com/scholar/</a><br><a href="http://g.linkscholar.org/" target="_blank" rel="external">http://g.linkscholar.org/</a><br><a href="http://scholar.google.com.secure.sci-hub.org/" target="_blank" rel="external">http://scholar.google.com.secure.sci-hub.org/</a></p>
<h2 id="hosts">hosts</h2><p><a href="http://laod.cn" target="_blank" rel="external">老D博客</a><br><a href="http://igge.gq/" target="_blank" rel="external">谷友部落</a><br><a href="https://raw.githubusercontent.com/txthinking/google-hosts/master/hosts" target="_blank" rel="external">GitHub1</a><br><a href="https://raw.githubusercontent.com/vokins/simpleu/master/hosts" target="_blank" rel="external">GitHub2</a><br><a href="https://raw.githubusercontent.com/lack006/Android-Hosts-L/master/hosts3.txt" target="_blank" rel="external">GitHub3</a><br><a href="https://github.com/racaljk/hosts" target="_blank" rel="external">racaljk/hosts</a></p>
<h2 id="VPN">VPN</h2><p>呵呵, 现在很多好用的VPN都被查了水表, 这里也就不乱说了, 免得自己也被查水表, 就这样.. </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>由于众所周知的原因, Google等一系列的网站并不是很招ZF的喜欢, 导致无法访问, 但是作为程序猿怎么能被这点小问题给难倒呢, 对吧~</p>]]>
    
    </summary>
    
      <category term="DNS" scheme="http://huyaohui.com/tags/DNS/"/>
    
      <category term="Google" scheme="http://huyaohui.com/tags/Google/"/>
    
      <category term="Note" scheme="http://huyaohui.com/tags/Note/"/>
    
      <category term="Google" scheme="http://huyaohui.com/categories/Google/"/>
    
  </entry>
  
</feed>
